Conflict in state 159 between rule 55 and token TELSE resolved as shift.
State 19 contains 1 reduce/reduce conflict.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    function_def -> function_header compound_st
rule 7    function_header -> dcl_spec function_name formal_param
rule 8    function_header -> dcl_spec error
rule 9    function_header -> dcl_spec function_name error
rule 10   dcl_spec -> dcl_specifiers
rule 11   dcl_specifiers -> dcl_specifier
rule 12   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 13   dcl_specifier -> type_qualifier
rule 14   dcl_specifier -> type_specifier
rule 15   type_qualifier -> TCONST
rule 16   type_specifier -> TINT
rule 17   type_specifier -> TFLOAT
rule 18   type_specifier -> TVOID
rule 19   function_name -> TIDENT
rule 20   formal_param -> TBRASL opt_formal_param TBRASR
rule 21   opt_formal_param -> formal_param_list
rule 22   opt_formal_param ->		/* empty */
rule 23   formal_param_list -> param_dcl
rule 24   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 25   formal_param_list -> error
rule 26   param_dcl -> dcl_spec declarator
rule 27   compound_st -> TBRAML opt_dcl_list opt_stat_list TBRAMR
rule 28   compound_st -> TBRAML opt_dcl_list opt_stat_list error
rule 29   opt_dcl_list -> declaration_list
rule 30   declaration_list -> declaration
rule 31   declaration_list -> declaration_list declaration
rule 32   declaration -> dcl_spec init_dcl_list TSEMICOLON
rule 33   declaration -> dcl_spec init_dcl_list error
rule 34   init_dcl_list -> init_declarator
rule 35   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 36   init_declarator -> declarator
rule 37   init_declarator -> declarator TASSIGN TNUMBER
rule 38   init_declarator -> declarator TASSIGN TRNUMBER
rule 39   declarator -> TIDENT
rule 40   declarator -> TIDENT TBRALL opt_number TBRALR
rule 41   declarator -> TIDENT TBRALL opt_number error
rule 42   opt_number -> TNUMBER
rule 43   opt_number -> TRNUMBER
rule 44   opt_stat_list -> statement_list
rule 45   statement_list -> statement
rule 46   statement_list -> statement_list statement
rule 47   statement -> compound_st
rule 48   statement -> expression_st
rule 49   statement -> if_st
rule 50   statement -> while_st
rule 51   statement -> return_st
rule 52   expression_st -> opt_expression TSEMICOLON
rule 53   expression_st -> opt_expression error
rule 54   opt_expression -> expression
rule 55   if_st -> TIF TBRASL expression TBRASR statement
rule 56   if_st -> TIF TBRASL expression TBRASR statement TELSE statement
rule 57   while_st -> TWHILE TBRASL expression TBRASR statement
rule 58   return_st -> TRETURN opt_expression TSEMICOLON
rule 59   expression -> assignment_exp
rule 60   assignment_exp -> logical_or_exp
rule 61   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 62   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 63   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 64   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 65   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 66   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 67   logical_or_exp -> logical_and_exp
rule 68   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 69   logical_and_exp -> equality_exp
rule 70   logical_and_exp -> logical_and_exp TAND equality_exp
rule 71   equality_exp -> relational_exp
rule 72   equality_exp -> equality_exp TEQUAL relational_exp
rule 73   equality_exp -> equality_exp TNOTEQU relational_exp
rule 74   relational_exp -> additive_exp
rule 75   relational_exp -> relational_exp TGREAT additive_exp
rule 76   relational_exp -> relational_exp TLESS additive_exp
rule 77   relational_exp -> relational_exp TGREATE additive_exp
rule 78   relational_exp -> relational_exp TLESSE additive_exp
rule 79   additive_exp -> multiplicative_exp
rule 80   additive_exp -> additive_exp TADD multiplicative_exp
rule 81   additive_exp -> additive_exp TSUB multiplicative_exp
rule 82   multiplicative_exp -> unary_exp
rule 83   multiplicative_exp -> multiplicative_exp TMUL unary_exp
rule 84   multiplicative_exp -> multiplicative_exp TDIV unary_exp
rule 85   multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 86   unary_exp -> postfix_exp
rule 87   unary_exp -> TSUB unary_exp
rule 88   unary_exp -> TNOT unary_exp
rule 89   unary_exp -> TINC unary_exp
rule 90   unary_exp -> TDEC unary_exp
rule 91   postfix_exp -> primary_exp
rule 92   postfix_exp -> postfix_exp TBRALL expression TBRALR
rule 93   postfix_exp -> postfix_exp TBRASL opt_actual_param TBRASR
rule 94   postfix_exp -> postfix_exp TINC
rule 95   postfix_exp -> postfix_exp TDEC
rule 96   opt_actual_param -> actual_param
rule 97   actual_param -> actual_param_list
rule 98   actual_param_list -> assignment_exp
rule 99   actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 100  actual_param_list -> error
rule 101  primary_exp -> TIDENT
rule 102  primary_exp -> TNUMBER
rule 103  primary_exp -> TRNUMBER
rule 104  primary_exp -> TBRASL expression TBRASR
rule 105  primary_exp -> TBRASL expression error

Terminals, with rules where they appear

$ (-1)
error (256) 8 9 25 28 33 41 53 100 105
TCONST (258) 15
TELSE (259) 56
TIF (260) 55 56
TINT (261) 16
TFLOAT (262) 17
TRETURN (263) 58
TVOID (264) 18
TWHILE (265) 57
TADD (266) 80
TSUB (267) 81 87
TMUL (268) 83
TDIV (269) 84
TMOD (270) 85
TASSIGN (271) 37 38 61
TADDASSIGN (272) 62
TSUBASSIGN (273) 63
TMULASSIGN (274) 64
TDIVASSIGN (275) 65
TMODASSIGN (276) 66
TOR (277) 68
TAND (278) 70
TNOT (279) 88
TEQUAL (280) 72
TNOTEQU (281) 73
TGREATE (282) 77
TLESSE (283) 78
TGREAT (284) 75
TLESS (285) 76
TINC (286) 89 94
TDEC (287) 90 95
TBRASL (288) 20 55 56 57 93 104 105
TBRASR (289) 20 55 56 57 93 104
TBRAML (290) 27 28
TBRAMR (291) 27
TBRALL (292) 40 41 92
TBRALR (293) 40 92
TCOMMA (294) 24 35 99
TSEMICOLON (295) 32 52 58
TIDENT (296) 19 39 40 41 101
TNUMBER (297) 37 42 102
TRNUMBER (298) 38 43 103
LOWER_THAN_ELSE (299)

Nonterminals, with rules where they appear

mini_c (45)
    on left: 1
translation_unit (46)
    on left: 2 3, on right: 1 3
external_dcl (47)
    on left: 4 5, on right: 2 3
function_def (48)
    on left: 6, on right: 4
function_header (49)
    on left: 7 8 9, on right: 6
dcl_spec (50)
    on left: 10, on right: 7 8 9 26 32 33
dcl_specifiers (51)
    on left: 11 12, on right: 10 12
dcl_specifier (52)
    on left: 13 14, on right: 11 12
type_qualifier (53)
    on left: 15, on right: 13
type_specifier (54)
    on left: 16 17 18, on right: 14
function_name (55)
    on left: 19, on right: 7 9
formal_param (56)
    on left: 20, on right: 7
opt_formal_param (57)
    on left: 21 22, on right: 20
formal_param_list (58)
    on left: 23 24 25, on right: 21 24
param_dcl (59)
    on left: 26, on right: 23 24
compound_st (60)
    on left: 27 28, on right: 6 47
opt_dcl_list (61)
    on left: 29, on right: 27 28
declaration_list (62)
    on left: 30 31, on right: 29 31
declaration (63)
    on left: 32 33, on right: 5 30 31
init_dcl_list (64)
    on left: 34 35, on right: 32 33 35
init_declarator (65)
    on left: 36 37 38, on right: 34 35
declarator (66)
    on left: 39 40 41, on right: 26 36 37 38
opt_number (67)
    on left: 42 43, on right: 40 41
opt_stat_list (68)
    on left: 44, on right: 27 28
statement_list (69)
    on left: 45 46, on right: 44 46
statement (70)
    on left: 47 48 49 50 51, on right: 45 46 55 56 57
expression_st (71)
    on left: 52 53, on right: 48
opt_expression (72)
    on left: 54, on right: 52 53 58
if_st (73)
    on left: 55 56, on right: 49
while_st (74)
    on left: 57, on right: 50
return_st (75)
    on left: 58, on right: 51
expression (76)
    on left: 59, on right: 54 55 56 57 92 104 105
assignment_exp (77)
    on left: 60 61 62 63 64 65 66, on right: 59 61 62 63 64 65 66 98
    99
logical_or_exp (78)
    on left: 67 68, on right: 60 68
logical_and_exp (79)
    on left: 69 70, on right: 67 68 70
equality_exp (80)
    on left: 71 72 73, on right: 69 70 72 73
relational_exp (81)
    on left: 74 75 76 77 78, on right: 71 72 73 75 76 77 78
additive_exp (82)
    on left: 79 80 81, on right: 74 75 76 77 78 80 81
multiplicative_exp (83)
    on left: 82 83 84 85, on right: 79 80 81 83 84 85
unary_exp (84)
    on left: 86 87 88 89 90, on right: 61 62 63 64 65 66 82 83 84 85
    87 88 89 90
postfix_exp (85)
    on left: 91 92 93 94 95, on right: 86 92 93 94 95
opt_actual_param (86)
    on left: 96, on right: 93
actual_param (87)
    on left: 97, on right: 96
actual_param_list (88)
    on left: 98 99 100, on right: 97 99
primary_exp (89)
    on left: 101 102 103 104 105, on right: 91


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    mini_c	go to state 164
    translation_unit	go to state 5
    external_dcl	go to state 6
    function_def	go to state 7
    function_header	go to state 8
    dcl_spec	go to state 9
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    declaration	go to state 14



state 1

    type_qualifier  ->  TCONST .   (rule 15)

    $default	reduce using rule 15 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 16)

    $default	reduce using rule 16 (type_specifier)



state 3

    type_specifier  ->  TFLOAT .   (rule 17)

    $default	reduce using rule 17 (type_specifier)



state 4

    type_specifier  ->  TVOID .   (rule 18)

    $default	reduce using rule 18 (type_specifier)



state 5

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 15
    function_def	go to state 7
    function_header	go to state 8
    dcl_spec	go to state 9
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    declaration	go to state 14



state 6

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 7

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 8

    function_def  ->  function_header . compound_st   (rule 6)

    TBRAML	shift, and go to state 16

    compound_st	go to state 17



state 9

    function_header  ->  dcl_spec . function_name formal_param   (rule 7)
    function_header  ->  dcl_spec . error   (rule 8)
    function_header  ->  dcl_spec . function_name error   (rule 9)
    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 32)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 33)

    error	shift, and go to state 18
    TIDENT	shift, and go to state 19

    function_name	go to state 20
    init_dcl_list	go to state 21
    init_declarator	go to state 22
    declarator	go to state 23



state 10

    dcl_spec  ->  dcl_specifiers .   (rule 10)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 12)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 10 (dcl_spec)

    dcl_specifier	go to state 24
    type_qualifier	go to state 12
    type_specifier	go to state 13



state 11

    dcl_specifiers  ->  dcl_specifier .   (rule 11)

    $default	reduce using rule 11 (dcl_specifiers)



state 12

    dcl_specifier  ->  type_qualifier .   (rule 13)

    $default	reduce using rule 13 (dcl_specifier)



state 13

    dcl_specifier  ->  type_specifier .   (rule 14)

    $default	reduce using rule 14 (dcl_specifier)



state 14

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 15

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 16

    compound_st  ->  TBRAML . opt_dcl_list opt_stat_list TBRAMR   (rule 27)
    compound_st  ->  TBRAML . opt_dcl_list opt_stat_list error   (rule 28)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    dcl_spec	go to state 25
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    opt_dcl_list	go to state 26
    declaration_list	go to state 27
    declaration	go to state 28



state 17

    function_def  ->  function_header compound_st .   (rule 6)

    $default	reduce using rule 6 (function_def)



state 18

    function_header  ->  dcl_spec error .   (rule 8)

    $default	reduce using rule 8 (function_header)



state 19

    function_name  ->  TIDENT .   (rule 19)
    declarator  ->  TIDENT .   (rule 39)
    declarator  ->  TIDENT . TBRALL opt_number TBRALR   (rule 40)
    declarator  ->  TIDENT . TBRALL opt_number error   (rule 41)

    TBRALL	shift, and go to state 29

    error	reduce using rule 19 (function_name)
    error	[reduce using rule 39 (declarator)]
    TBRASL	reduce using rule 19 (function_name)
    $default	reduce using rule 39 (declarator)



state 20

    function_header  ->  dcl_spec function_name . formal_param   (rule 7)
    function_header  ->  dcl_spec function_name . error   (rule 9)

    error	shift, and go to state 30
    TBRASL	shift, and go to state 31

    formal_param	go to state 32



state 21

    declaration  ->  dcl_spec init_dcl_list . TSEMICOLON   (rule 32)
    declaration  ->  dcl_spec init_dcl_list . error   (rule 33)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 35)

    error	shift, and go to state 33
    TCOMMA	shift, and go to state 34
    TSEMICOLON	shift, and go to state 35



state 22

    init_dcl_list  ->  init_declarator .   (rule 34)

    $default	reduce using rule 34 (init_dcl_list)



state 23

    init_declarator  ->  declarator .   (rule 36)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 37)
    init_declarator  ->  declarator . TASSIGN TRNUMBER   (rule 38)

    TASSIGN	shift, and go to state 36

    $default	reduce using rule 36 (init_declarator)



state 24

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 12)

    $default	reduce using rule 12 (dcl_specifiers)



state 25

    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 32)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 33)

    TIDENT	shift, and go to state 37

    init_dcl_list	go to state 21
    init_declarator	go to state 22
    declarator	go to state 23



state 26

    compound_st  ->  TBRAML opt_dcl_list . opt_stat_list TBRAMR   (rule 27)
    compound_st  ->  TBRAML opt_dcl_list . opt_stat_list error   (rule 28)

    TIF 	shift, and go to state 38
    TRETURN	shift, and go to state 39
    TWHILE	shift, and go to state 40
    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    compound_st	go to state 49
    opt_stat_list	go to state 50
    statement_list	go to state 51
    statement	go to state 52
    expression_st	go to state 53
    opt_expression	go to state 54
    if_st	go to state 55
    while_st	go to state 56
    return_st	go to state 57
    expression	go to state 58
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 27

    opt_dcl_list  ->  declaration_list .   (rule 29)
    declaration_list  ->  declaration_list . declaration   (rule 31)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 29 (opt_dcl_list)

    dcl_spec	go to state 25
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    declaration	go to state 69



state 28

    declaration_list  ->  declaration .   (rule 30)

    $default	reduce using rule 30 (declaration_list)



state 29

    declarator  ->  TIDENT TBRALL . opt_number TBRALR   (rule 40)
    declarator  ->  TIDENT TBRALL . opt_number error   (rule 41)

    TNUMBER	shift, and go to state 70
    TRNUMBER	shift, and go to state 71

    opt_number	go to state 72



state 30

    function_header  ->  dcl_spec function_name error .   (rule 9)

    $default	reduce using rule 9 (function_header)



state 31

    formal_param  ->  TBRASL . opt_formal_param TBRASR   (rule 20)

    error	shift, and go to state 73
    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    TBRASR	reduce using rule 22 (opt_formal_param)

    dcl_spec	go to state 74
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    opt_formal_param	go to state 75
    formal_param_list	go to state 76
    param_dcl	go to state 77



state 32

    function_header  ->  dcl_spec function_name formal_param .   (rule 7)

    $default	reduce using rule 7 (function_header)



state 33

    declaration  ->  dcl_spec init_dcl_list error .   (rule 33)

    $default	reduce using rule 33 (declaration)



state 34

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 35)

    TIDENT	shift, and go to state 37

    init_declarator	go to state 78
    declarator	go to state 23



state 35

    declaration  ->  dcl_spec init_dcl_list TSEMICOLON .   (rule 32)

    $default	reduce using rule 32 (declaration)



state 36

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 37)
    init_declarator  ->  declarator TASSIGN . TRNUMBER   (rule 38)

    TNUMBER	shift, and go to state 79
    TRNUMBER	shift, and go to state 80



state 37

    declarator  ->  TIDENT .   (rule 39)
    declarator  ->  TIDENT . TBRALL opt_number TBRALR   (rule 40)
    declarator  ->  TIDENT . TBRALL opt_number error   (rule 41)

    TBRALL	shift, and go to state 29

    $default	reduce using rule 39 (declarator)



state 38

    if_st  ->  TIF . TBRASL expression TBRASR statement   (rule 55)
    if_st  ->  TIF . TBRASL expression TBRASR statement TELSE statement   (rule 56)

    TBRASL	shift, and go to state 81



state 39

    return_st  ->  TRETURN . opt_expression TSEMICOLON   (rule 58)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    opt_expression	go to state 82
    expression	go to state 58
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 40

    while_st  ->  TWHILE . TBRASL expression TBRASR statement   (rule 57)

    TBRASL	shift, and go to state 83



state 41

    unary_exp  ->  TSUB . unary_exp   (rule 87)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 84
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 42

    unary_exp  ->  TNOT . unary_exp   (rule 88)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 85
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 43

    unary_exp  ->  TINC . unary_exp   (rule 89)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 86
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 44

    unary_exp  ->  TDEC . unary_exp   (rule 90)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 87
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 45

    primary_exp  ->  TBRASL . expression TBRASR   (rule 104)
    primary_exp  ->  TBRASL . expression error   (rule 105)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    expression	go to state 88
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 46

    primary_exp  ->  TIDENT .   (rule 101)

    $default	reduce using rule 101 (primary_exp)



state 47

    primary_exp  ->  TNUMBER .   (rule 102)

    $default	reduce using rule 102 (primary_exp)



state 48

    primary_exp  ->  TRNUMBER .   (rule 103)

    $default	reduce using rule 103 (primary_exp)



state 49

    statement  ->  compound_st .   (rule 47)

    $default	reduce using rule 47 (statement)



state 50

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list . TBRAMR   (rule 27)
    compound_st  ->  TBRAML opt_dcl_list opt_stat_list . error   (rule 28)

    error	shift, and go to state 89
    TBRAMR	shift, and go to state 90



state 51

    opt_stat_list  ->  statement_list .   (rule 44)
    statement_list  ->  statement_list . statement   (rule 46)

    TIF 	shift, and go to state 38
    TRETURN	shift, and go to state 39
    TWHILE	shift, and go to state 40
    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    $default	reduce using rule 44 (opt_stat_list)

    compound_st	go to state 49
    statement	go to state 91
    expression_st	go to state 53
    opt_expression	go to state 54
    if_st	go to state 55
    while_st	go to state 56
    return_st	go to state 57
    expression	go to state 58
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 52

    statement_list  ->  statement .   (rule 45)

    $default	reduce using rule 45 (statement_list)



state 53

    statement  ->  expression_st .   (rule 48)

    $default	reduce using rule 48 (statement)



state 54

    expression_st  ->  opt_expression . TSEMICOLON   (rule 52)
    expression_st  ->  opt_expression . error   (rule 53)

    error	shift, and go to state 92
    TSEMICOLON	shift, and go to state 93



state 55

    statement  ->  if_st .   (rule 49)

    $default	reduce using rule 49 (statement)



state 56

    statement  ->  while_st .   (rule 50)

    $default	reduce using rule 50 (statement)



state 57

    statement  ->  return_st .   (rule 51)

    $default	reduce using rule 51 (statement)



state 58

    opt_expression  ->  expression .   (rule 54)

    $default	reduce using rule 54 (opt_expression)



state 59

    expression  ->  assignment_exp .   (rule 59)

    $default	reduce using rule 59 (expression)



state 60

    assignment_exp  ->  logical_or_exp .   (rule 60)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 68)

    TOR 	shift, and go to state 94

    $default	reduce using rule 60 (assignment_exp)



state 61

    logical_or_exp  ->  logical_and_exp .   (rule 67)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 70)

    TAND	shift, and go to state 95

    $default	reduce using rule 67 (logical_or_exp)



state 62

    logical_and_exp  ->  equality_exp .   (rule 69)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 72)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 73)

    TEQUAL	shift, and go to state 96
    TNOTEQU	shift, and go to state 97

    $default	reduce using rule 69 (logical_and_exp)



state 63

    equality_exp  ->  relational_exp .   (rule 71)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 75)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 76)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 77)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 78)

    TGREATE	shift, and go to state 98
    TLESSE	shift, and go to state 99
    TGREAT	shift, and go to state 100
    TLESS	shift, and go to state 101

    $default	reduce using rule 71 (equality_exp)



state 64

    relational_exp  ->  additive_exp .   (rule 74)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 80)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 81)

    TADD	shift, and go to state 102
    TSUB	shift, and go to state 103

    $default	reduce using rule 74 (relational_exp)



state 65

    additive_exp  ->  multiplicative_exp .   (rule 79)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 83)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 85)

    TMUL	shift, and go to state 104
    TDIV	shift, and go to state 105
    TMOD	shift, and go to state 106

    $default	reduce using rule 79 (additive_exp)



state 66

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 61)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 62)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 63)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 64)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 65)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 66)
    multiplicative_exp  ->  unary_exp .   (rule 82)

    TASSIGN	shift, and go to state 107
    TADDASSIGN	shift, and go to state 108
    TSUBASSIGN	shift, and go to state 109
    TMULASSIGN	shift, and go to state 110
    TDIVASSIGN	shift, and go to state 111
    TMODASSIGN	shift, and go to state 112

    $default	reduce using rule 82 (multiplicative_exp)



state 67

    unary_exp  ->  postfix_exp .   (rule 86)
    postfix_exp  ->  postfix_exp . TBRALL expression TBRALR   (rule 92)
    postfix_exp  ->  postfix_exp . TBRASL opt_actual_param TBRASR   (rule 93)
    postfix_exp  ->  postfix_exp . TINC   (rule 94)
    postfix_exp  ->  postfix_exp . TDEC   (rule 95)

    TINC	shift, and go to state 113
    TDEC	shift, and go to state 114
    TBRASL	shift, and go to state 115
    TBRALL	shift, and go to state 116

    $default	reduce using rule 86 (unary_exp)



state 68

    postfix_exp  ->  primary_exp .   (rule 91)

    $default	reduce using rule 91 (postfix_exp)



state 69

    declaration_list  ->  declaration_list declaration .   (rule 31)

    $default	reduce using rule 31 (declaration_list)



state 70

    opt_number  ->  TNUMBER .   (rule 42)

    $default	reduce using rule 42 (opt_number)



state 71

    opt_number  ->  TRNUMBER .   (rule 43)

    $default	reduce using rule 43 (opt_number)



state 72

    declarator  ->  TIDENT TBRALL opt_number . TBRALR   (rule 40)
    declarator  ->  TIDENT TBRALL opt_number . error   (rule 41)

    error	shift, and go to state 117
    TBRALR	shift, and go to state 118



state 73

    formal_param_list  ->  error .   (rule 25)

    $default	reduce using rule 25 (formal_param_list)



state 74

    param_dcl  ->  dcl_spec . declarator   (rule 26)

    TIDENT	shift, and go to state 37

    declarator	go to state 119



state 75

    formal_param  ->  TBRASL opt_formal_param . TBRASR   (rule 20)

    TBRASR	shift, and go to state 120



state 76

    opt_formal_param  ->  formal_param_list .   (rule 21)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 24)

    TCOMMA	shift, and go to state 121

    $default	reduce using rule 21 (opt_formal_param)



state 77

    formal_param_list  ->  param_dcl .   (rule 23)

    $default	reduce using rule 23 (formal_param_list)



state 78

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 35)

    $default	reduce using rule 35 (init_dcl_list)



state 79

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 37)

    $default	reduce using rule 37 (init_declarator)



state 80

    init_declarator  ->  declarator TASSIGN TRNUMBER .   (rule 38)

    $default	reduce using rule 38 (init_declarator)



state 81

    if_st  ->  TIF TBRASL . expression TBRASR statement   (rule 55)
    if_st  ->  TIF TBRASL . expression TBRASR statement TELSE statement   (rule 56)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    expression	go to state 122
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 82

    return_st  ->  TRETURN opt_expression . TSEMICOLON   (rule 58)

    TSEMICOLON	shift, and go to state 123



state 83

    while_st  ->  TWHILE TBRASL . expression TBRASR statement   (rule 57)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    expression	go to state 124
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 84

    unary_exp  ->  TSUB unary_exp .   (rule 87)

    $default	reduce using rule 87 (unary_exp)



state 85

    unary_exp  ->  TNOT unary_exp .   (rule 88)

    $default	reduce using rule 88 (unary_exp)



state 86

    unary_exp  ->  TINC unary_exp .   (rule 89)

    $default	reduce using rule 89 (unary_exp)



state 87

    unary_exp  ->  TDEC unary_exp .   (rule 90)

    $default	reduce using rule 90 (unary_exp)



state 88

    primary_exp  ->  TBRASL expression . TBRASR   (rule 104)
    primary_exp  ->  TBRASL expression . error   (rule 105)

    error	shift, and go to state 125
    TBRASR	shift, and go to state 126



state 89

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list error .   (rule 28)

    $default	reduce using rule 28 (compound_st)



state 90

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list TBRAMR .   (rule 27)

    $default	reduce using rule 27 (compound_st)



state 91

    statement_list  ->  statement_list statement .   (rule 46)

    $default	reduce using rule 46 (statement_list)



state 92

    expression_st  ->  opt_expression error .   (rule 53)

    $default	reduce using rule 53 (expression_st)



state 93

    expression_st  ->  opt_expression TSEMICOLON .   (rule 52)

    $default	reduce using rule 52 (expression_st)



state 94

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 68)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    logical_and_exp	go to state 127
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 95

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 70)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    equality_exp	go to state 129
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 96

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 72)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    relational_exp	go to state 130
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 97

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 73)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    relational_exp	go to state 131
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 98

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 77)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    additive_exp	go to state 132
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 99

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 78)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    additive_exp	go to state 133
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 100

    relational_exp  ->  relational_exp TGREAT . additive_exp   (rule 75)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    additive_exp	go to state 134
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 101

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 76)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    additive_exp	go to state 135
    multiplicative_exp	go to state 65
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 102

    additive_exp  ->  additive_exp TADD . multiplicative_exp   (rule 80)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    multiplicative_exp	go to state 136
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 103

    additive_exp  ->  additive_exp TSUB . multiplicative_exp   (rule 81)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    multiplicative_exp	go to state 137
    unary_exp	go to state 128
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 104

    multiplicative_exp  ->  multiplicative_exp TMUL . unary_exp   (rule 83)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 138
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 105

    multiplicative_exp  ->  multiplicative_exp TDIV . unary_exp   (rule 84)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 139
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 106

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 85)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    unary_exp	go to state 140
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 107

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 61)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 141
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 108

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 62)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 142
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 109

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 63)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 143
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 110

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 64)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 144
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 111

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 65)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 145
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 112

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 66)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 146
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 113

    postfix_exp  ->  postfix_exp TINC .   (rule 94)

    $default	reduce using rule 94 (postfix_exp)



state 114

    postfix_exp  ->  postfix_exp TDEC .   (rule 95)

    $default	reduce using rule 95 (postfix_exp)



state 115

    postfix_exp  ->  postfix_exp TBRASL . opt_actual_param TBRASR   (rule 93)

    error	shift, and go to state 147
    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 148
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    opt_actual_param	go to state 149
    actual_param	go to state 150
    actual_param_list	go to state 151
    primary_exp	go to state 68



state 116

    postfix_exp  ->  postfix_exp TBRALL . expression TBRALR   (rule 92)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    expression	go to state 152
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 117

    declarator  ->  TIDENT TBRALL opt_number error .   (rule 41)

    $default	reduce using rule 41 (declarator)



state 118

    declarator  ->  TIDENT TBRALL opt_number TBRALR .   (rule 40)

    $default	reduce using rule 40 (declarator)



state 119

    param_dcl  ->  dcl_spec declarator .   (rule 26)

    $default	reduce using rule 26 (param_dcl)



state 120

    formal_param  ->  TBRASL opt_formal_param TBRASR .   (rule 20)

    $default	reduce using rule 20 (formal_param)



state 121

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 24)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    dcl_spec	go to state 74
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    param_dcl	go to state 153



state 122

    if_st  ->  TIF TBRASL expression . TBRASR statement   (rule 55)
    if_st  ->  TIF TBRASL expression . TBRASR statement TELSE statement   (rule 56)

    TBRASR	shift, and go to state 154



state 123

    return_st  ->  TRETURN opt_expression TSEMICOLON .   (rule 58)

    $default	reduce using rule 58 (return_st)



state 124

    while_st  ->  TWHILE TBRASL expression . TBRASR statement   (rule 57)

    TBRASR	shift, and go to state 155



state 125

    primary_exp  ->  TBRASL expression error .   (rule 105)

    $default	reduce using rule 105 (primary_exp)



state 126

    primary_exp  ->  TBRASL expression TBRASR .   (rule 104)

    $default	reduce using rule 104 (primary_exp)



state 127

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 68)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 70)

    TAND	shift, and go to state 95

    $default	reduce using rule 68 (logical_or_exp)



state 128

    multiplicative_exp  ->  unary_exp .   (rule 82)

    $default	reduce using rule 82 (multiplicative_exp)



state 129

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 70)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 72)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 73)

    TEQUAL	shift, and go to state 96
    TNOTEQU	shift, and go to state 97

    $default	reduce using rule 70 (logical_and_exp)



state 130

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 72)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 75)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 76)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 77)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 78)

    TGREATE	shift, and go to state 98
    TLESSE	shift, and go to state 99
    TGREAT	shift, and go to state 100
    TLESS	shift, and go to state 101

    $default	reduce using rule 72 (equality_exp)



state 131

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 73)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 75)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 76)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 77)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 78)

    TGREATE	shift, and go to state 98
    TLESSE	shift, and go to state 99
    TGREAT	shift, and go to state 100
    TLESS	shift, and go to state 101

    $default	reduce using rule 73 (equality_exp)



state 132

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 77)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 80)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 81)

    TADD	shift, and go to state 102
    TSUB	shift, and go to state 103

    $default	reduce using rule 77 (relational_exp)



state 133

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 78)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 80)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 81)

    TADD	shift, and go to state 102
    TSUB	shift, and go to state 103

    $default	reduce using rule 78 (relational_exp)



state 134

    relational_exp  ->  relational_exp TGREAT additive_exp .   (rule 75)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 80)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 81)

    TADD	shift, and go to state 102
    TSUB	shift, and go to state 103

    $default	reduce using rule 75 (relational_exp)



state 135

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 76)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 80)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 81)

    TADD	shift, and go to state 102
    TSUB	shift, and go to state 103

    $default	reduce using rule 76 (relational_exp)



state 136

    additive_exp  ->  additive_exp TADD multiplicative_exp .   (rule 80)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 83)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 85)

    TMUL	shift, and go to state 104
    TDIV	shift, and go to state 105
    TMOD	shift, and go to state 106

    $default	reduce using rule 80 (additive_exp)



state 137

    additive_exp  ->  additive_exp TSUB multiplicative_exp .   (rule 81)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 83)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 85)

    TMUL	shift, and go to state 104
    TDIV	shift, and go to state 105
    TMOD	shift, and go to state 106

    $default	reduce using rule 81 (additive_exp)



state 138

    multiplicative_exp  ->  multiplicative_exp TMUL unary_exp .   (rule 83)

    $default	reduce using rule 83 (multiplicative_exp)



state 139

    multiplicative_exp  ->  multiplicative_exp TDIV unary_exp .   (rule 84)

    $default	reduce using rule 84 (multiplicative_exp)



state 140

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 85)

    $default	reduce using rule 85 (multiplicative_exp)



state 141

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 61)

    $default	reduce using rule 61 (assignment_exp)



state 142

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 62)

    $default	reduce using rule 62 (assignment_exp)



state 143

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 63)

    $default	reduce using rule 63 (assignment_exp)



state 144

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 64)

    $default	reduce using rule 64 (assignment_exp)



state 145

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 65)

    $default	reduce using rule 65 (assignment_exp)



state 146

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 66)

    $default	reduce using rule 66 (assignment_exp)



state 147

    actual_param_list  ->  error .   (rule 100)

    $default	reduce using rule 100 (actual_param_list)



state 148

    actual_param_list  ->  assignment_exp .   (rule 98)

    $default	reduce using rule 98 (actual_param_list)



state 149

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param . TBRASR   (rule 93)

    TBRASR	shift, and go to state 156



state 150

    opt_actual_param  ->  actual_param .   (rule 96)

    $default	reduce using rule 96 (opt_actual_param)



state 151

    actual_param  ->  actual_param_list .   (rule 97)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 99)

    TCOMMA	shift, and go to state 157

    $default	reduce using rule 97 (actual_param)



state 152

    postfix_exp  ->  postfix_exp TBRALL expression . TBRALR   (rule 92)

    TBRALR	shift, and go to state 158



state 153

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 24)

    $default	reduce using rule 24 (formal_param_list)



state 154

    if_st  ->  TIF TBRASL expression TBRASR . statement   (rule 55)
    if_st  ->  TIF TBRASL expression TBRASR . statement TELSE statement   (rule 56)

    TIF 	shift, and go to state 38
    TRETURN	shift, and go to state 39
    TWHILE	shift, and go to state 40
    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    compound_st	go to state 49
    statement	go to state 159
    expression_st	go to state 53
    opt_expression	go to state 54
    if_st	go to state 55
    while_st	go to state 56
    return_st	go to state 57
    expression	go to state 58
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 155

    while_st  ->  TWHILE TBRASL expression TBRASR . statement   (rule 57)

    TIF 	shift, and go to state 38
    TRETURN	shift, and go to state 39
    TWHILE	shift, and go to state 40
    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    compound_st	go to state 49
    statement	go to state 160
    expression_st	go to state 53
    opt_expression	go to state 54
    if_st	go to state 55
    while_st	go to state 56
    return_st	go to state 57
    expression	go to state 58
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 156

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param TBRASR .   (rule 93)

    $default	reduce using rule 93 (postfix_exp)



state 157

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 99)

    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    assignment_exp	go to state 161
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 158

    postfix_exp  ->  postfix_exp TBRALL expression TBRALR .   (rule 92)

    $default	reduce using rule 92 (postfix_exp)



state 159

    if_st  ->  TIF TBRASL expression TBRASR statement .   (rule 55)
    if_st  ->  TIF TBRASL expression TBRASR statement . TELSE statement   (rule 56)

    TELSE	shift, and go to state 162

    $default	reduce using rule 55 (if_st)



state 160

    while_st  ->  TWHILE TBRASL expression TBRASR statement .   (rule 57)

    $default	reduce using rule 57 (while_st)



state 161

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 99)

    $default	reduce using rule 99 (actual_param_list)



state 162

    if_st  ->  TIF TBRASL expression TBRASR statement TELSE . statement   (rule 56)

    TIF 	shift, and go to state 38
    TRETURN	shift, and go to state 39
    TWHILE	shift, and go to state 40
    TSUB	shift, and go to state 41
    TNOT	shift, and go to state 42
    TINC	shift, and go to state 43
    TDEC	shift, and go to state 44
    TBRASL	shift, and go to state 45
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 46
    TNUMBER	shift, and go to state 47
    TRNUMBER	shift, and go to state 48

    compound_st	go to state 49
    statement	go to state 163
    expression_st	go to state 53
    opt_expression	go to state 54
    if_st	go to state 55
    while_st	go to state 56
    return_st	go to state 57
    expression	go to state 58
    assignment_exp	go to state 59
    logical_or_exp	go to state 60
    logical_and_exp	go to state 61
    equality_exp	go to state 62
    relational_exp	go to state 63
    additive_exp	go to state 64
    multiplicative_exp	go to state 65
    unary_exp	go to state 66
    postfix_exp	go to state 67
    primary_exp	go to state 68



state 163

    if_st  ->  TIF TBRASL expression TBRASR statement TELSE statement .   (rule 56)

    $default	reduce using rule 56 (if_st)



state 164

    $   	go to state 165



state 165

    $   	go to state 166



state 166

    $default	accept
