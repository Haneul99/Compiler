Conflict in state 158 between rule 58 and token TELSE resolved as shift.
State 25 contains 1 reduce/reduce conflict.
State 49 contains 1 reduce/reduce conflict.
State 73 contains 1 shift/reduce conflict.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    function_def -> function_header compound_st
rule 7    function_header -> dcl_spec function_name formal_param
rule 8    dcl_spec -> dcl_specifiers
rule 9    dcl_specifiers -> dcl_specifier
rule 10   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 11   dcl_specifier -> type_qualifier
rule 12   dcl_specifier -> type_specifier
rule 13   type_qualifier -> TCONST
rule 14   type_specifier -> TINT
rule 15   type_specifier -> TFLOAT
rule 16   type_specifier -> TVOID
rule 17   function_name -> TIDENT
rule 18   formal_param -> TBRASL opt_formal_param TBRASR
rule 19   formal_param -> TBRASL opt_formal_param error
rule 20   opt_formal_param -> formal_param_list
rule 21   opt_formal_param ->		/* empty */
rule 22   formal_param_list -> param_dcl
rule 23   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 24   formal_param_list -> formal_param_list error
rule 25   param_dcl -> dcl_spec declarator
rule 26   compound_st -> TBRAML opt_dcl_list opt_stat_list TBRAMR
rule 27   compound_st -> TBRAML opt_dcl_list opt_stat_list error
rule 28   opt_dcl_list -> declaration_list
rule 29   opt_dcl_list ->		/* empty */
rule 30   declaration_list -> declaration
rule 31   declaration_list -> declaration_list declaration
rule 32   declaration -> dcl_spec init_dcl_list TSEMICOLON
rule 33   declaration -> dcl_spec init_dcl_list error
rule 34   init_dcl_list -> init_declarator
rule 35   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 36   init_declarator -> declarator
rule 37   init_declarator -> declarator TASSIGN TNUMBER
rule 38   init_declarator -> declarator TASSIGN TRNUMBER
rule 39   declarator -> TIDENT
rule 40   declarator -> TIDENT TBRALL opt_number TBRALR
rule 41   declarator -> TIDENT TBRALL opt_number error
rule 42   opt_number -> TNUMBER
rule 43   opt_number -> TRNUMBER
rule 44   opt_number ->		/* empty */
rule 45   opt_stat_list -> statement_list
rule 46   opt_stat_list ->		/* empty */
rule 47   statement_list -> statement
rule 48   statement_list -> statement_list statement
rule 49   statement -> compound_st
rule 50   statement -> expression_st
rule 51   statement -> if_st
rule 52   statement -> while_st
rule 53   statement -> return_st
rule 54   expression_st -> opt_expression TSEMICOLON
rule 55   expression_st -> opt_expression error
rule 56   opt_expression -> expression
rule 57   opt_expression ->		/* empty */
rule 58   if_st -> TIF TBRASL expression TBRASR statement
rule 59   if_st -> TIF TBRASL expression TBRASR statement TELSE statement
rule 60   while_st -> TWHILE TBRASL expression TBRASR statement
rule 61   return_st -> TRETURN opt_expression TSEMICOLON
rule 62   expression -> assignment_exp
rule 63   assignment_exp -> logical_or_exp
rule 64   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 65   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 66   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 67   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 68   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 69   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 70   logical_or_exp -> logical_and_exp
rule 71   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 72   logical_and_exp -> equality_exp
rule 73   logical_and_exp -> logical_and_exp TAND equality_exp
rule 74   equality_exp -> relational_exp
rule 75   equality_exp -> equality_exp TEQUAL relational_exp
rule 76   equality_exp -> equality_exp TNOTEQU relational_exp
rule 77   relational_exp -> additive_exp
rule 78   relational_exp -> relational_exp TGREAT additive_exp
rule 79   relational_exp -> relational_exp TLESS additive_exp
rule 80   relational_exp -> relational_exp TGREATE additive_exp
rule 81   relational_exp -> relational_exp TLESSE additive_exp
rule 82   additive_exp -> multiplicative_exp
rule 83   additive_exp -> additive_exp TADD multiplicative_exp
rule 84   additive_exp -> additive_exp TSUB multiplicative_exp
rule 85   multiplicative_exp -> unary_exp
rule 86   multiplicative_exp -> multiplicative_exp TMUL unary_exp
rule 87   multiplicative_exp -> multiplicative_exp TDIV unary_exp
rule 88   multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 89   unary_exp -> postfix_exp
rule 90   unary_exp -> TSUB unary_exp
rule 91   unary_exp -> TNOT unary_exp
rule 92   unary_exp -> TINC unary_exp
rule 93   unary_exp -> TDEC unary_exp
rule 94   postfix_exp -> primary_exp
rule 95   postfix_exp -> postfix_exp TBRALL expression TBRALR
rule 96   postfix_exp -> postfix_exp TBRASL opt_actual_param TBRASR
rule 97   postfix_exp -> postfix_exp TINC
rule 98   postfix_exp -> postfix_exp TDEC
rule 99   opt_actual_param -> actual_param
rule 100  opt_actual_param ->		/* empty */
rule 101  actual_param -> actual_param_list
rule 102  actual_param_list -> assignment_exp
rule 103  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 104  actual_param_list -> actual_param_list error
rule 105  primary_exp -> TIDENT
rule 106  primary_exp -> TNUMBER
rule 107  primary_exp -> TRNUMBER
rule 108  primary_exp -> TBRASL expression TBRASR
rule 109  primary_exp -> TBRASL expression error

Terminals, with rules where they appear

$ (-1)
error (256) 19 24 27 33 41 55 104 109
TCONST (258) 13
TELSE (259) 59
TIF (260) 58 59
TINT (261) 14
TFLOAT (262) 15
TRETURN (263) 61
TVOID (264) 16
TWHILE (265) 60
TADD (266) 83
TSUB (267) 84 90
TMUL (268) 86
TDIV (269) 87
TMOD (270) 88
TASSIGN (271) 37 38 64
TADDASSIGN (272) 65
TSUBASSIGN (273) 66
TMULASSIGN (274) 67
TDIVASSIGN (275) 68
TMODASSIGN (276) 69
TOR (277) 71
TAND (278) 73
TNOT (279) 91
TEQUAL (280) 75
TNOTEQU (281) 76
TGREATE (282) 80
TLESSE (283) 81
TGREAT (284) 78
TLESS (285) 79
TINC (286) 92 97
TDEC (287) 93 98
TBRASL (288) 18 19 58 59 60 96 108 109
TBRASR (289) 18 58 59 60 96 108
TBRAML (290) 26 27
TBRAMR (291) 26
TBRALL (292) 40 41 95
TBRALR (293) 40 95
TCOMMA (294) 23 35 103
TSEMICOLON (295) 32 54 61
TIDENT (296) 17 39 40 41 105
TNUMBER (297) 37 42 106
TRNUMBER (298) 38 43 107
LOWER_THAN_ELSE (299)

Nonterminals, with rules where they appear

mini_c (45)
    on left: 1
translation_unit (46)
    on left: 2 3, on right: 1 3
external_dcl (47)
    on left: 4 5, on right: 2 3
function_def (48)
    on left: 6, on right: 4
function_header (49)
    on left: 7, on right: 6
dcl_spec (50)
    on left: 8, on right: 7 25 32 33
dcl_specifiers (51)
    on left: 9 10, on right: 8 10
dcl_specifier (52)
    on left: 11 12, on right: 9 10
type_qualifier (53)
    on left: 13, on right: 11
type_specifier (54)
    on left: 14 15 16, on right: 12
function_name (55)
    on left: 17, on right: 7
formal_param (56)
    on left: 18 19, on right: 7
opt_formal_param (57)
    on left: 20 21, on right: 18 19
formal_param_list (58)
    on left: 22 23 24, on right: 20 23 24
param_dcl (59)
    on left: 25, on right: 22 23
compound_st (60)
    on left: 26 27, on right: 6 49
opt_dcl_list (61)
    on left: 28 29, on right: 26 27
declaration_list (62)
    on left: 30 31, on right: 28 31
declaration (63)
    on left: 32 33, on right: 5 30 31
init_dcl_list (64)
    on left: 34 35, on right: 32 33 35
init_declarator (65)
    on left: 36 37 38, on right: 34 35
declarator (66)
    on left: 39 40 41, on right: 25 36 37 38
opt_number (67)
    on left: 42 43 44, on right: 40 41
opt_stat_list (68)
    on left: 45 46, on right: 26 27
statement_list (69)
    on left: 47 48, on right: 45 48
statement (70)
    on left: 49 50 51 52 53, on right: 47 48 58 59 60
expression_st (71)
    on left: 54 55, on right: 50
opt_expression (72)
    on left: 56 57, on right: 54 55 61
if_st (73)
    on left: 58 59, on right: 51
while_st (74)
    on left: 60, on right: 52
return_st (75)
    on left: 61, on right: 53
expression (76)
    on left: 62, on right: 56 58 59 60 95 108 109
assignment_exp (77)
    on left: 63 64 65 66 67 68 69, on right: 62 64 65 66 67 68 69 102
    103
logical_or_exp (78)
    on left: 70 71, on right: 63 71
logical_and_exp (79)
    on left: 72 73, on right: 70 71 73
equality_exp (80)
    on left: 74 75 76, on right: 72 73 75 76
relational_exp (81)
    on left: 77 78 79 80 81, on right: 74 75 76 78 79 80 81
additive_exp (82)
    on left: 82 83 84, on right: 77 78 79 80 81 83 84
multiplicative_exp (83)
    on left: 85 86 87 88, on right: 82 83 84 86 87 88
unary_exp (84)
    on left: 89 90 91 92 93, on right: 64 65 66 67 68 69 85 86 87 88
    90 91 92 93
postfix_exp (85)
    on left: 94 95 96 97 98, on right: 89 95 96 97 98
opt_actual_param (86)
    on left: 99 100, on right: 96
actual_param (87)
    on left: 101, on right: 99
actual_param_list (88)
    on left: 102 103 104, on right: 101 103 104
primary_exp (89)
    on left: 105 106 107 108 109, on right: 94


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    mini_c	go to state 163
    translation_unit	go to state 5
    external_dcl	go to state 6
    function_def	go to state 7
    function_header	go to state 8
    dcl_spec	go to state 9
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    declaration	go to state 14



state 1

    type_qualifier  ->  TCONST .   (rule 13)

    $default	reduce using rule 13 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 14)

    $default	reduce using rule 14 (type_specifier)



state 3

    type_specifier  ->  TFLOAT .   (rule 15)

    $default	reduce using rule 15 (type_specifier)



state 4

    type_specifier  ->  TVOID .   (rule 16)

    $default	reduce using rule 16 (type_specifier)



state 5

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 15
    function_def	go to state 7
    function_header	go to state 8
    dcl_spec	go to state 9
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    declaration	go to state 14



state 6

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 7

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 8

    function_def  ->  function_header . compound_st   (rule 6)

    TBRAML	shift, and go to state 16

    compound_st	go to state 17



state 9

    function_header  ->  dcl_spec . function_name formal_param   (rule 7)
    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 32)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 33)

    TIDENT	shift, and go to state 18

    function_name	go to state 19
    init_dcl_list	go to state 20
    init_declarator	go to state 21
    declarator	go to state 22



state 10

    dcl_spec  ->  dcl_specifiers .   (rule 8)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 10)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 8 (dcl_spec)

    dcl_specifier	go to state 23
    type_qualifier	go to state 12
    type_specifier	go to state 13



state 11

    dcl_specifiers  ->  dcl_specifier .   (rule 9)

    $default	reduce using rule 9 (dcl_specifiers)



state 12

    dcl_specifier  ->  type_qualifier .   (rule 11)

    $default	reduce using rule 11 (dcl_specifier)



state 13

    dcl_specifier  ->  type_specifier .   (rule 12)

    $default	reduce using rule 12 (dcl_specifier)



state 14

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 15

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 16

    compound_st  ->  TBRAML . opt_dcl_list opt_stat_list TBRAMR   (rule 26)
    compound_st  ->  TBRAML . opt_dcl_list opt_stat_list error   (rule 27)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 29 (opt_dcl_list)

    dcl_spec	go to state 24
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    opt_dcl_list	go to state 25
    declaration_list	go to state 26
    declaration	go to state 27



state 17

    function_def  ->  function_header compound_st .   (rule 6)

    $default	reduce using rule 6 (function_def)



state 18

    function_name  ->  TIDENT .   (rule 17)
    declarator  ->  TIDENT .   (rule 39)
    declarator  ->  TIDENT . TBRALL opt_number TBRALR   (rule 40)
    declarator  ->  TIDENT . TBRALL opt_number error   (rule 41)

    TBRALL	shift, and go to state 28

    TBRASL	reduce using rule 17 (function_name)
    $default	reduce using rule 39 (declarator)



state 19

    function_header  ->  dcl_spec function_name . formal_param   (rule 7)

    TBRASL	shift, and go to state 29

    formal_param	go to state 30



state 20

    declaration  ->  dcl_spec init_dcl_list . TSEMICOLON   (rule 32)
    declaration  ->  dcl_spec init_dcl_list . error   (rule 33)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 35)

    error	shift, and go to state 31
    TCOMMA	shift, and go to state 32
    TSEMICOLON	shift, and go to state 33



state 21

    init_dcl_list  ->  init_declarator .   (rule 34)

    $default	reduce using rule 34 (init_dcl_list)



state 22

    init_declarator  ->  declarator .   (rule 36)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 37)
    init_declarator  ->  declarator . TASSIGN TRNUMBER   (rule 38)

    TASSIGN	shift, and go to state 34

    $default	reduce using rule 36 (init_declarator)



state 23

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 10)

    $default	reduce using rule 10 (dcl_specifiers)



state 24

    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 32)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 33)

    TIDENT	shift, and go to state 35

    init_dcl_list	go to state 20
    init_declarator	go to state 21
    declarator	go to state 22



state 25

    compound_st  ->  TBRAML opt_dcl_list . opt_stat_list TBRAMR   (rule 26)
    compound_st  ->  TBRAML opt_dcl_list . opt_stat_list error   (rule 27)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    error	reduce using rule 46 (opt_stat_list)
    error	[reduce using rule 57 (opt_expression)]
    TSEMICOLON	reduce using rule 57 (opt_expression)
    $default	reduce using rule 46 (opt_stat_list)

    compound_st	go to state 47
    opt_stat_list	go to state 48
    statement_list	go to state 49
    statement	go to state 50
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 26

    opt_dcl_list  ->  declaration_list .   (rule 28)
    declaration_list  ->  declaration_list . declaration   (rule 31)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 28 (opt_dcl_list)

    dcl_spec	go to state 24
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    declaration	go to state 67



state 27

    declaration_list  ->  declaration .   (rule 30)

    $default	reduce using rule 30 (declaration_list)



state 28

    declarator  ->  TIDENT TBRALL . opt_number TBRALR   (rule 40)
    declarator  ->  TIDENT TBRALL . opt_number error   (rule 41)

    TNUMBER	shift, and go to state 68
    TRNUMBER	shift, and go to state 69

    $default	reduce using rule 44 (opt_number)

    opt_number	go to state 70



state 29

    formal_param  ->  TBRASL . opt_formal_param TBRASR   (rule 18)
    formal_param  ->  TBRASL . opt_formal_param error   (rule 19)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    $default	reduce using rule 21 (opt_formal_param)

    dcl_spec	go to state 71
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    opt_formal_param	go to state 72
    formal_param_list	go to state 73
    param_dcl	go to state 74



state 30

    function_header  ->  dcl_spec function_name formal_param .   (rule 7)

    $default	reduce using rule 7 (function_header)



state 31

    declaration  ->  dcl_spec init_dcl_list error .   (rule 33)

    $default	reduce using rule 33 (declaration)



state 32

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 35)

    TIDENT	shift, and go to state 35

    init_declarator	go to state 75
    declarator	go to state 22



state 33

    declaration  ->  dcl_spec init_dcl_list TSEMICOLON .   (rule 32)

    $default	reduce using rule 32 (declaration)



state 34

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 37)
    init_declarator  ->  declarator TASSIGN . TRNUMBER   (rule 38)

    TNUMBER	shift, and go to state 76
    TRNUMBER	shift, and go to state 77



state 35

    declarator  ->  TIDENT .   (rule 39)
    declarator  ->  TIDENT . TBRALL opt_number TBRALR   (rule 40)
    declarator  ->  TIDENT . TBRALL opt_number error   (rule 41)

    TBRALL	shift, and go to state 28

    $default	reduce using rule 39 (declarator)



state 36

    if_st  ->  TIF . TBRASL expression TBRASR statement   (rule 58)
    if_st  ->  TIF . TBRASL expression TBRASR statement TELSE statement   (rule 59)

    TBRASL	shift, and go to state 78



state 37

    return_st  ->  TRETURN . opt_expression TSEMICOLON   (rule 61)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    $default	reduce using rule 57 (opt_expression)

    opt_expression	go to state 79
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 38

    while_st  ->  TWHILE . TBRASL expression TBRASR statement   (rule 60)

    TBRASL	shift, and go to state 80



state 39

    unary_exp  ->  TSUB . unary_exp   (rule 90)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 81
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 40

    unary_exp  ->  TNOT . unary_exp   (rule 91)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 82
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 41

    unary_exp  ->  TINC . unary_exp   (rule 92)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 83
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 42

    unary_exp  ->  TDEC . unary_exp   (rule 93)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 84
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 43

    primary_exp  ->  TBRASL . expression TBRASR   (rule 108)
    primary_exp  ->  TBRASL . expression error   (rule 109)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    expression	go to state 85
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 44

    primary_exp  ->  TIDENT .   (rule 105)

    $default	reduce using rule 105 (primary_exp)



state 45

    primary_exp  ->  TNUMBER .   (rule 106)

    $default	reduce using rule 106 (primary_exp)



state 46

    primary_exp  ->  TRNUMBER .   (rule 107)

    $default	reduce using rule 107 (primary_exp)



state 47

    statement  ->  compound_st .   (rule 49)

    $default	reduce using rule 49 (statement)



state 48

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list . TBRAMR   (rule 26)
    compound_st  ->  TBRAML opt_dcl_list opt_stat_list . error   (rule 27)

    error	shift, and go to state 86
    TBRAMR	shift, and go to state 87



state 49

    opt_stat_list  ->  statement_list .   (rule 45)
    statement_list  ->  statement_list . statement   (rule 48)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    error	reduce using rule 45 (opt_stat_list)
    error	[reduce using rule 57 (opt_expression)]
    TSEMICOLON	reduce using rule 57 (opt_expression)
    $default	reduce using rule 45 (opt_stat_list)

    compound_st	go to state 47
    statement	go to state 88
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 50

    statement_list  ->  statement .   (rule 47)

    $default	reduce using rule 47 (statement_list)



state 51

    statement  ->  expression_st .   (rule 50)

    $default	reduce using rule 50 (statement)



state 52

    expression_st  ->  opt_expression . TSEMICOLON   (rule 54)
    expression_st  ->  opt_expression . error   (rule 55)

    error	shift, and go to state 89
    TSEMICOLON	shift, and go to state 90



state 53

    statement  ->  if_st .   (rule 51)

    $default	reduce using rule 51 (statement)



state 54

    statement  ->  while_st .   (rule 52)

    $default	reduce using rule 52 (statement)



state 55

    statement  ->  return_st .   (rule 53)

    $default	reduce using rule 53 (statement)



state 56

    opt_expression  ->  expression .   (rule 56)

    $default	reduce using rule 56 (opt_expression)



state 57

    expression  ->  assignment_exp .   (rule 62)

    $default	reduce using rule 62 (expression)



state 58

    assignment_exp  ->  logical_or_exp .   (rule 63)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 71)

    TOR 	shift, and go to state 91

    $default	reduce using rule 63 (assignment_exp)



state 59

    logical_or_exp  ->  logical_and_exp .   (rule 70)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 73)

    TAND	shift, and go to state 92

    $default	reduce using rule 70 (logical_or_exp)



state 60

    logical_and_exp  ->  equality_exp .   (rule 72)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 75)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 76)

    TEQUAL	shift, and go to state 93
    TNOTEQU	shift, and go to state 94

    $default	reduce using rule 72 (logical_and_exp)



state 61

    equality_exp  ->  relational_exp .   (rule 74)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 78)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 79)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 80)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 81)

    TGREATE	shift, and go to state 95
    TLESSE	shift, and go to state 96
    TGREAT	shift, and go to state 97
    TLESS	shift, and go to state 98

    $default	reduce using rule 74 (equality_exp)



state 62

    relational_exp  ->  additive_exp .   (rule 77)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 83)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 84)

    TADD	shift, and go to state 99
    TSUB	shift, and go to state 100

    $default	reduce using rule 77 (relational_exp)



state 63

    additive_exp  ->  multiplicative_exp .   (rule 82)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 86)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 87)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 88)

    TMUL	shift, and go to state 101
    TDIV	shift, and go to state 102
    TMOD	shift, and go to state 103

    $default	reduce using rule 82 (additive_exp)



state 64

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 64)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 65)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 66)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 67)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 68)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 69)
    multiplicative_exp  ->  unary_exp .   (rule 85)

    TASSIGN	shift, and go to state 104
    TADDASSIGN	shift, and go to state 105
    TSUBASSIGN	shift, and go to state 106
    TMULASSIGN	shift, and go to state 107
    TDIVASSIGN	shift, and go to state 108
    TMODASSIGN	shift, and go to state 109

    $default	reduce using rule 85 (multiplicative_exp)



state 65

    unary_exp  ->  postfix_exp .   (rule 89)
    postfix_exp  ->  postfix_exp . TBRALL expression TBRALR   (rule 95)
    postfix_exp  ->  postfix_exp . TBRASL opt_actual_param TBRASR   (rule 96)
    postfix_exp  ->  postfix_exp . TINC   (rule 97)
    postfix_exp  ->  postfix_exp . TDEC   (rule 98)

    TINC	shift, and go to state 110
    TDEC	shift, and go to state 111
    TBRASL	shift, and go to state 112
    TBRALL	shift, and go to state 113

    $default	reduce using rule 89 (unary_exp)



state 66

    postfix_exp  ->  primary_exp .   (rule 94)

    $default	reduce using rule 94 (postfix_exp)



state 67

    declaration_list  ->  declaration_list declaration .   (rule 31)

    $default	reduce using rule 31 (declaration_list)



state 68

    opt_number  ->  TNUMBER .   (rule 42)

    $default	reduce using rule 42 (opt_number)



state 69

    opt_number  ->  TRNUMBER .   (rule 43)

    $default	reduce using rule 43 (opt_number)



state 70

    declarator  ->  TIDENT TBRALL opt_number . TBRALR   (rule 40)
    declarator  ->  TIDENT TBRALL opt_number . error   (rule 41)

    error	shift, and go to state 114
    TBRALR	shift, and go to state 115



state 71

    param_dcl  ->  dcl_spec . declarator   (rule 25)

    TIDENT	shift, and go to state 35

    declarator	go to state 116



state 72

    formal_param  ->  TBRASL opt_formal_param . TBRASR   (rule 18)
    formal_param  ->  TBRASL opt_formal_param . error   (rule 19)

    error	shift, and go to state 117
    TBRASR	shift, and go to state 118



state 73

    opt_formal_param  ->  formal_param_list .   (rule 20)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 23)
    formal_param_list  ->  formal_param_list . error   (rule 24)

    error	shift, and go to state 119
    TCOMMA	shift, and go to state 120

    error	[reduce using rule 20 (opt_formal_param)]
    TBRASR	reduce using rule 20 (opt_formal_param)



state 74

    formal_param_list  ->  param_dcl .   (rule 22)

    $default	reduce using rule 22 (formal_param_list)



state 75

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 35)

    $default	reduce using rule 35 (init_dcl_list)



state 76

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 37)

    $default	reduce using rule 37 (init_declarator)



state 77

    init_declarator  ->  declarator TASSIGN TRNUMBER .   (rule 38)

    $default	reduce using rule 38 (init_declarator)



state 78

    if_st  ->  TIF TBRASL . expression TBRASR statement   (rule 58)
    if_st  ->  TIF TBRASL . expression TBRASR statement TELSE statement   (rule 59)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    expression	go to state 121
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 79

    return_st  ->  TRETURN opt_expression . TSEMICOLON   (rule 61)

    TSEMICOLON	shift, and go to state 122



state 80

    while_st  ->  TWHILE TBRASL . expression TBRASR statement   (rule 60)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    expression	go to state 123
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 81

    unary_exp  ->  TSUB unary_exp .   (rule 90)

    $default	reduce using rule 90 (unary_exp)



state 82

    unary_exp  ->  TNOT unary_exp .   (rule 91)

    $default	reduce using rule 91 (unary_exp)



state 83

    unary_exp  ->  TINC unary_exp .   (rule 92)

    $default	reduce using rule 92 (unary_exp)



state 84

    unary_exp  ->  TDEC unary_exp .   (rule 93)

    $default	reduce using rule 93 (unary_exp)



state 85

    primary_exp  ->  TBRASL expression . TBRASR   (rule 108)
    primary_exp  ->  TBRASL expression . error   (rule 109)

    error	shift, and go to state 124
    TBRASR	shift, and go to state 125



state 86

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list error .   (rule 27)

    $default	reduce using rule 27 (compound_st)



state 87

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list TBRAMR .   (rule 26)

    $default	reduce using rule 26 (compound_st)



state 88

    statement_list  ->  statement_list statement .   (rule 48)

    $default	reduce using rule 48 (statement_list)



state 89

    expression_st  ->  opt_expression error .   (rule 55)

    $default	reduce using rule 55 (expression_st)



state 90

    expression_st  ->  opt_expression TSEMICOLON .   (rule 54)

    $default	reduce using rule 54 (expression_st)



state 91

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 71)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    logical_and_exp	go to state 126
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 92

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 73)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    equality_exp	go to state 128
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 93

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 75)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    relational_exp	go to state 129
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 94

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 76)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    relational_exp	go to state 130
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 95

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 80)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    additive_exp	go to state 131
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 96

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 81)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    additive_exp	go to state 132
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 97

    relational_exp  ->  relational_exp TGREAT . additive_exp   (rule 78)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    additive_exp	go to state 133
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 98

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 79)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    additive_exp	go to state 134
    multiplicative_exp	go to state 63
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 99

    additive_exp  ->  additive_exp TADD . multiplicative_exp   (rule 83)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    multiplicative_exp	go to state 135
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 100

    additive_exp  ->  additive_exp TSUB . multiplicative_exp   (rule 84)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    multiplicative_exp	go to state 136
    unary_exp	go to state 127
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 101

    multiplicative_exp  ->  multiplicative_exp TMUL . unary_exp   (rule 86)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 137
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 102

    multiplicative_exp  ->  multiplicative_exp TDIV . unary_exp   (rule 87)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 138
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 103

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 88)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    unary_exp	go to state 139
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 104

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 64)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 140
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 105

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 65)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 141
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 106

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 66)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 142
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 107

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 67)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 143
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 108

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 68)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 144
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 109

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 69)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 145
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 110

    postfix_exp  ->  postfix_exp TINC .   (rule 97)

    $default	reduce using rule 97 (postfix_exp)



state 111

    postfix_exp  ->  postfix_exp TDEC .   (rule 98)

    $default	reduce using rule 98 (postfix_exp)



state 112

    postfix_exp  ->  postfix_exp TBRASL . opt_actual_param TBRASR   (rule 96)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    $default	reduce using rule 100 (opt_actual_param)

    assignment_exp	go to state 146
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    opt_actual_param	go to state 147
    actual_param	go to state 148
    actual_param_list	go to state 149
    primary_exp	go to state 66



state 113

    postfix_exp  ->  postfix_exp TBRALL . expression TBRALR   (rule 95)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    expression	go to state 150
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 114

    declarator  ->  TIDENT TBRALL opt_number error .   (rule 41)

    $default	reduce using rule 41 (declarator)



state 115

    declarator  ->  TIDENT TBRALL opt_number TBRALR .   (rule 40)

    $default	reduce using rule 40 (declarator)



state 116

    param_dcl  ->  dcl_spec declarator .   (rule 25)

    $default	reduce using rule 25 (param_dcl)



state 117

    formal_param  ->  TBRASL opt_formal_param error .   (rule 19)

    $default	reduce using rule 19 (formal_param)



state 118

    formal_param  ->  TBRASL opt_formal_param TBRASR .   (rule 18)

    $default	reduce using rule 18 (formal_param)



state 119

    formal_param_list  ->  formal_param_list error .   (rule 24)

    $default	reduce using rule 24 (formal_param_list)



state 120

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 23)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TFLOAT	shift, and go to state 3
    TVOID	shift, and go to state 4

    dcl_spec	go to state 71
    dcl_specifiers	go to state 10
    dcl_specifier	go to state 11
    type_qualifier	go to state 12
    type_specifier	go to state 13
    param_dcl	go to state 151



state 121

    if_st  ->  TIF TBRASL expression . TBRASR statement   (rule 58)
    if_st  ->  TIF TBRASL expression . TBRASR statement TELSE statement   (rule 59)

    TBRASR	shift, and go to state 152



state 122

    return_st  ->  TRETURN opt_expression TSEMICOLON .   (rule 61)

    $default	reduce using rule 61 (return_st)



state 123

    while_st  ->  TWHILE TBRASL expression . TBRASR statement   (rule 60)

    TBRASR	shift, and go to state 153



state 124

    primary_exp  ->  TBRASL expression error .   (rule 109)

    $default	reduce using rule 109 (primary_exp)



state 125

    primary_exp  ->  TBRASL expression TBRASR .   (rule 108)

    $default	reduce using rule 108 (primary_exp)



state 126

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 71)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 73)

    TAND	shift, and go to state 92

    $default	reduce using rule 71 (logical_or_exp)



state 127

    multiplicative_exp  ->  unary_exp .   (rule 85)

    $default	reduce using rule 85 (multiplicative_exp)



state 128

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 73)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 75)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 76)

    TEQUAL	shift, and go to state 93
    TNOTEQU	shift, and go to state 94

    $default	reduce using rule 73 (logical_and_exp)



state 129

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 75)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 78)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 79)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 80)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 81)

    TGREATE	shift, and go to state 95
    TLESSE	shift, and go to state 96
    TGREAT	shift, and go to state 97
    TLESS	shift, and go to state 98

    $default	reduce using rule 75 (equality_exp)



state 130

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 76)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 78)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 79)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 80)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 81)

    TGREATE	shift, and go to state 95
    TLESSE	shift, and go to state 96
    TGREAT	shift, and go to state 97
    TLESS	shift, and go to state 98

    $default	reduce using rule 76 (equality_exp)



state 131

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 80)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 83)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 84)

    TADD	shift, and go to state 99
    TSUB	shift, and go to state 100

    $default	reduce using rule 80 (relational_exp)



state 132

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 81)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 83)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 84)

    TADD	shift, and go to state 99
    TSUB	shift, and go to state 100

    $default	reduce using rule 81 (relational_exp)



state 133

    relational_exp  ->  relational_exp TGREAT additive_exp .   (rule 78)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 83)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 84)

    TADD	shift, and go to state 99
    TSUB	shift, and go to state 100

    $default	reduce using rule 78 (relational_exp)



state 134

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 79)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 83)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 84)

    TADD	shift, and go to state 99
    TSUB	shift, and go to state 100

    $default	reduce using rule 79 (relational_exp)



state 135

    additive_exp  ->  additive_exp TADD multiplicative_exp .   (rule 83)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 86)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 87)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 88)

    TMUL	shift, and go to state 101
    TDIV	shift, and go to state 102
    TMOD	shift, and go to state 103

    $default	reduce using rule 83 (additive_exp)



state 136

    additive_exp  ->  additive_exp TSUB multiplicative_exp .   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 86)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 87)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 88)

    TMUL	shift, and go to state 101
    TDIV	shift, and go to state 102
    TMOD	shift, and go to state 103

    $default	reduce using rule 84 (additive_exp)



state 137

    multiplicative_exp  ->  multiplicative_exp TMUL unary_exp .   (rule 86)

    $default	reduce using rule 86 (multiplicative_exp)



state 138

    multiplicative_exp  ->  multiplicative_exp TDIV unary_exp .   (rule 87)

    $default	reduce using rule 87 (multiplicative_exp)



state 139

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 88)

    $default	reduce using rule 88 (multiplicative_exp)



state 140

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 64)

    $default	reduce using rule 64 (assignment_exp)



state 141

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 65)

    $default	reduce using rule 65 (assignment_exp)



state 142

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 66)

    $default	reduce using rule 66 (assignment_exp)



state 143

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 67)

    $default	reduce using rule 67 (assignment_exp)



state 144

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 68)

    $default	reduce using rule 68 (assignment_exp)



state 145

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 69)

    $default	reduce using rule 69 (assignment_exp)



state 146

    actual_param_list  ->  assignment_exp .   (rule 102)

    $default	reduce using rule 102 (actual_param_list)



state 147

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param . TBRASR   (rule 96)

    TBRASR	shift, and go to state 154



state 148

    opt_actual_param  ->  actual_param .   (rule 99)

    $default	reduce using rule 99 (opt_actual_param)



state 149

    actual_param  ->  actual_param_list .   (rule 101)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 103)
    actual_param_list  ->  actual_param_list . error   (rule 104)

    error	shift, and go to state 155
    TCOMMA	shift, and go to state 156

    TBRASR	reduce using rule 101 (actual_param)



state 150

    postfix_exp  ->  postfix_exp TBRALL expression . TBRALR   (rule 95)

    TBRALR	shift, and go to state 157



state 151

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 23)

    $default	reduce using rule 23 (formal_param_list)



state 152

    if_st  ->  TIF TBRASL expression TBRASR . statement   (rule 58)
    if_st  ->  TIF TBRASL expression TBRASR . statement TELSE statement   (rule 59)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    $default	reduce using rule 57 (opt_expression)

    compound_st	go to state 47
    statement	go to state 158
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 153

    while_st  ->  TWHILE TBRASL expression TBRASR . statement   (rule 60)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    $default	reduce using rule 57 (opt_expression)

    compound_st	go to state 47
    statement	go to state 159
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 154

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param TBRASR .   (rule 96)

    $default	reduce using rule 96 (postfix_exp)



state 155

    actual_param_list  ->  actual_param_list error .   (rule 104)

    $default	reduce using rule 104 (actual_param_list)



state 156

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 103)

    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    assignment_exp	go to state 160
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 157

    postfix_exp  ->  postfix_exp TBRALL expression TBRALR .   (rule 95)

    $default	reduce using rule 95 (postfix_exp)



state 158

    if_st  ->  TIF TBRASL expression TBRASR statement .   (rule 58)
    if_st  ->  TIF TBRASL expression TBRASR statement . TELSE statement   (rule 59)

    TELSE	shift, and go to state 161

    $default	reduce using rule 58 (if_st)



state 159

    while_st  ->  TWHILE TBRASL expression TBRASR statement .   (rule 60)

    $default	reduce using rule 60 (while_st)



state 160

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 103)

    $default	reduce using rule 103 (actual_param_list)



state 161

    if_st  ->  TIF TBRASL expression TBRASR statement TELSE . statement   (rule 59)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TSUB	shift, and go to state 39
    TNOT	shift, and go to state 40
    TINC	shift, and go to state 41
    TDEC	shift, and go to state 42
    TBRASL	shift, and go to state 43
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 44
    TNUMBER	shift, and go to state 45
    TRNUMBER	shift, and go to state 46

    $default	reduce using rule 57 (opt_expression)

    compound_st	go to state 47
    statement	go to state 162
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 162

    if_st  ->  TIF TBRASL expression TBRASR statement TELSE statement .   (rule 59)

    $default	reduce using rule 59 (if_st)



state 163

    $   	go to state 164



state 164

    $   	go to state 165



state 165

    $default	accept
