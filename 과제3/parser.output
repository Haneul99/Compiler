

Terminals which are not used:

   TNEWLINE


Conflict in state 185 between rule 63 and token TELSE resolved as shift.
State 109 contains 1 shift/reduce conflict.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    external_dcl -> error TSEMICOLON
rule 7    external_dcl -> error TBRAMR
rule 8    function_def -> function_header compound_st
rule 9    function_def -> error compound_st
rule 10   function_def -> function_header error
rule 11   function_header -> dcl_spec function_name formal_param
rule 12   dcl_spec -> dcl_specifiers
rule 13   dcl_specifiers -> dcl_specifier
rule 14   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 15   dcl_specifier -> type_qualifier
rule 16   dcl_specifier -> type_specifier
rule 17   type_qualifier -> TCONST
rule 18   type_specifier -> TINT
rule 19   type_specifier -> TFLOAT
rule 20   type_specifier -> TVOID
rule 21   function_name -> TIDENT
rule 22   formal_param -> TBRASL opt_formal_param TBRASR
rule 23   formal_param -> TBRASL opt_formal_param error
rule 24   opt_formal_param -> formal_param_list
rule 25   opt_formal_param ->		/* empty */
rule 26   formal_param_list -> param_dcl
rule 27   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 28   formal_param_list -> formal_param_list param_dcl error
rule 29   param_dcl -> dcl_spec declarator
rule 30   compound_st -> TBRAML opt_dcl_list opt_stat_list TBRAMR
rule 31   compound_st -> TBRAML opt_dcl_list opt_stat_list error
rule 32   opt_dcl_list -> declaration_list
rule 33   opt_dcl_list ->		/* empty */
rule 34   declaration_list -> declaration
rule 35   declaration_list -> declaration_list declaration
rule 36   declaration -> dcl_spec init_dcl_list TSEMICOLON
rule 37   declaration -> dcl_spec init_dcl_list error
rule 38   init_dcl_list -> init_declarator
rule 39   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 40   init_dcl_list -> init_dcl_list init_declarator error
rule 41   init_declarator -> declarator
rule 42   init_declarator -> declarator TASSIGN TNUMBER
rule 43   init_declarator -> declarator TASSIGN TRNUMBER
rule 44   declarator -> TIDENT
rule 45   declarator -> TIDENT TBRALL opt_number TBRALR
rule 46   declarator -> TIDENT TBRALL opt_number error
rule 47   opt_number -> TNUMBER
rule 48   opt_number -> TRNUMBER
rule 49   opt_number ->		/* empty */
rule 50   opt_stat_list -> statement_list
rule 51   opt_stat_list ->		/* empty */
rule 52   statement_list -> statement
rule 53   statement_list -> statement_list statement
rule 54   statement -> compound_st
rule 55   statement -> expression_st
rule 56   statement -> if_st
rule 57   statement -> while_st
rule 58   statement -> return_st
rule 59   expression_st -> opt_expression TSEMICOLON
rule 60   expression_st -> expression error
rule 61   opt_expression -> expression
rule 62   opt_expression ->		/* empty */
rule 63   if_st -> TIF TBRASL expression TBRASR statement
rule 64   if_st -> TIF TBRASL expression TBRASR statement TELSE statement
rule 65   while_st -> TWHILE TBRASL expression TBRASR statement
rule 66   return_st -> TRETURN opt_expression TSEMICOLON
rule 67   return_st -> TRETURN opt_expression error
rule 68   expression -> assignment_exp
rule 69   assignment_exp -> logical_or_exp
rule 70   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 71   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 72   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 73   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 74   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 75   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 76   assignment_exp -> unary_exp TASSIGN error
rule 77   assignment_exp -> unary_exp TADDASSIGN error
rule 78   assignment_exp -> unary_exp TSUBASSIGN error
rule 79   assignment_exp -> unary_exp TMULASSIGN error
rule 80   assignment_exp -> unary_exp TDIVASSIGN error
rule 81   assignment_exp -> unary_exp TMODASSIGN error
rule 82   logical_or_exp -> logical_and_exp
rule 83   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 84   logical_or_exp -> logical_or_exp TOR error
rule 85   logical_and_exp -> equality_exp
rule 86   logical_and_exp -> logical_and_exp TAND equality_exp
rule 87   logical_and_exp -> logical_and_exp TAND error
rule 88   equality_exp -> relational_exp
rule 89   equality_exp -> equality_exp TEQUAL relational_exp
rule 90   equality_exp -> equality_exp TNOTEQU relational_exp
rule 91   equality_exp -> equality_exp TEQUAL error
rule 92   equality_exp -> equality_exp TNOTEQU error
rule 93   relational_exp -> additive_exp
rule 94   relational_exp -> relational_exp TGREAT additive_exp
rule 95   relational_exp -> relational_exp TLESS additive_exp
rule 96   relational_exp -> relational_exp TGREATE additive_exp
rule 97   relational_exp -> relational_exp TLESSE additive_exp
rule 98   relational_exp -> relational_exp TGREAT error
rule 99   relational_exp -> relational_exp TLESS error
rule 100  relational_exp -> relational_exp TGREATE error
rule 101  relational_exp -> relational_exp TLESSE error
rule 102  additive_exp -> multiplicative_exp
rule 103  additive_exp -> additive_exp TADD multiplicative_exp
rule 104  additive_exp -> additive_exp TSUB multiplicative_exp
rule 105  additive_exp -> additive_exp TADD
rule 106  additive_exp -> TSUB error
rule 107  multiplicative_exp -> unary_exp
rule 108  multiplicative_exp -> multiplicative_exp TMUL unary_exp
rule 109  multiplicative_exp -> multiplicative_exp TDIV unary_exp
rule 110  multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 111  unary_exp -> postfix_exp
rule 112  unary_exp -> TSUB unary_exp
rule 113  unary_exp -> TNOT unary_exp
rule 114  unary_exp -> TINC unary_exp
rule 115  unary_exp -> TDEC unary_exp
rule 116  postfix_exp -> primary_exp
rule 117  postfix_exp -> postfix_exp TBRALL expression TBRALR
rule 118  postfix_exp -> postfix_exp TBRALL expression error
rule 119  postfix_exp -> postfix_exp TBRASL opt_actual_param TBRASR
rule 120  postfix_exp -> postfix_exp TBRASL opt_actual_param error
rule 121  postfix_exp -> postfix_exp TINC
rule 122  postfix_exp -> postfix_exp TDEC
rule 123  opt_actual_param -> actual_param
rule 124  actual_param -> actual_param_list
rule 125  actual_param ->		/* empty */
rule 126  actual_param_list -> assignment_exp
rule 127  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 128  primary_exp -> TIDENT
rule 129  primary_exp -> TNUMBER
rule 130  primary_exp -> TRNUMBER
rule 131  primary_exp -> TBRASL expression TBRASR
rule 132  primary_exp -> TBRASL expression error

Terminals, with rules where they appear

$ (-1)
error (256) 6 7 9 10 23 28 31 37 40 46 60 67 76 77 78 79 80 81 84 87
    91 92 98 99 100 101 106 118 120 132
TCONST (258) 17
TELSE (259) 64
TIF (260) 63 64
TINT (261) 18
TFLOAT (262) 19
TRETURN (263) 66 67
TVOID (264) 20
TWHILE (265) 65
TADD (266) 103 105
TSUB (267) 104 106 112
TMUL (268) 108
TDIV (269) 109
TMOD (270) 110
TASSIGN (271) 42 43 70 76
TADDASSIGN (272) 71 77
TSUBASSIGN (273) 72 78
TMULASSIGN (274) 73 79
TDIVASSIGN (275) 74 80
TMODASSIGN (276) 75 81
TOR (277) 83 84
TAND (278) 86 87
TNOT (279) 113
TEQUAL (280) 89 91
TNOTEQU (281) 90 92
TGREATE (282) 96 100
TLESSE (283) 97 101
TGREAT (284) 94 98
TLESS (285) 95 99
TINC (286) 114 121
TDEC (287) 115 122
TBRASL (288) 22 23 63 64 65 119 120 131 132
TBRASR (289) 22 63 64 65 119 131
TBRAML (290) 30 31
TBRAMR (291) 7 30
TBRALL (292) 45 46 117 118
TBRALR (293) 45 117
TCOMMA (294) 27 39 127
TSEMICOLON (295) 6 36 59 66
TIDENT (296) 21 44 45 46 128
TNUMBER (297) 42 47 129
TRNUMBER (298) 43 48 130
TNEWLINE (299)
LOWER_THAN_ELSE (300)

Nonterminals, with rules where they appear

mini_c (46)
    on left: 1
translation_unit (47)
    on left: 2 3, on right: 1 3
external_dcl (48)
    on left: 4 5 6 7, on right: 2 3
function_def (49)
    on left: 8 9 10, on right: 4
function_header (50)
    on left: 11, on right: 8 10
dcl_spec (51)
    on left: 12, on right: 11 29 36 37
dcl_specifiers (52)
    on left: 13 14, on right: 12 14
dcl_specifier (53)
    on left: 15 16, on right: 13 14
type_qualifier (54)
    on left: 17, on right: 15
type_specifier (55)
    on left: 18 19 20, on right: 16
function_name (56)
    on left: 21, on right: 11
formal_param (57)
    on left: 22 23, on right: 11
opt_formal_param (58)
    on left: 24 25, on right: 22 23
formal_param_list (59)
    on left: 26 27 28, on right: 24 27 28
param_dcl (60)
    on left: 29, on right: 26 27 28
compound_st (61)
    on left: 30 31, on right: 8 9 54
opt_dcl_list (62)
    on left: 32 33, on right: 30 31
declaration_list (63)
    on left: 34 35, on right: 32 35
declaration (64)
    on left: 36 37, on right: 5 34 35
init_dcl_list (65)
    on left: 38 39 40, on right: 36 37 39 40
init_declarator (66)
    on left: 41 42 43, on right: 38 39 40
declarator (67)
    on left: 44 45 46, on right: 29 41 42 43
opt_number (68)
    on left: 47 48 49, on right: 45 46
opt_stat_list (69)
    on left: 50 51, on right: 30 31
statement_list (70)
    on left: 52 53, on right: 50 53
statement (71)
    on left: 54 55 56 57 58, on right: 52 53 63 64 65
expression_st (72)
    on left: 59 60, on right: 55
opt_expression (73)
    on left: 61 62, on right: 59 66 67
if_st (74)
    on left: 63 64, on right: 56
while_st (75)
    on left: 65, on right: 57
return_st (76)
    on left: 66 67, on right: 58
expression (77)
    on left: 68, on right: 60 61 63 64 65 117 118 131 132
assignment_exp (78)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81,
    on right: 68 70 71 72 73 74 75 126 127
logical_or_exp (79)
    on left: 82 83 84, on right: 69 83 84
logical_and_exp (80)
    on left: 85 86 87, on right: 82 83 86 87
equality_exp (81)
    on left: 88 89 90 91 92, on right: 85 86 89 90 91 92
relational_exp (82)
    on left: 93 94 95 96 97 98 99 100 101, on right: 88 89 90 94 95
    96 97 98 99 100 101
additive_exp (83)
    on left: 102 103 104 105 106, on right: 93 94 95 96 97 103 104
    105
multiplicative_exp (84)
    on left: 107 108 109 110, on right: 102 103 104 108 109 110
unary_exp (85)
    on left: 111 112 113 114 115, on right: 70 71 72 73 74 75 76 77
    78 79 80 81 107 108 109 110 112 113 114 115
postfix_exp (86)
    on left: 116 117 118 119 120 121 122, on right: 111 117 118 119
    120 121 122
opt_actual_param (87)
    on left: 123, on right: 119 120
actual_param (88)
    on left: 124 125, on right: 123
actual_param_list (89)
    on left: 126 127, on right: 124 127
primary_exp (90)
    on left: 128 129 130 131 132, on right: 116


state 0

    error	shift, and go to state 1
    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    mini_c	go to state 190
    translation_unit	go to state 6
    external_dcl	go to state 7
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 1

    external_dcl  ->  error . TSEMICOLON   (rule 6)
    external_dcl  ->  error . TBRAMR   (rule 7)
    function_def  ->  error . compound_st   (rule 9)

    TBRAML	shift, and go to state 16
    TBRAMR	shift, and go to state 17
    TSEMICOLON	shift, and go to state 18

    compound_st	go to state 19



state 2

    type_qualifier  ->  TCONST .   (rule 17)

    $default	reduce using rule 17 (type_qualifier)



state 3

    type_specifier  ->  TINT .   (rule 18)

    $default	reduce using rule 18 (type_specifier)



state 4

    type_specifier  ->  TFLOAT .   (rule 19)

    $default	reduce using rule 19 (type_specifier)



state 5

    type_specifier  ->  TVOID .   (rule 20)

    $default	reduce using rule 20 (type_specifier)



state 6

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    error	shift, and go to state 1
    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    $   	reduce using rule 1 (mini_c)

    external_dcl	go to state 20
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 7

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 8

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 9

    function_def  ->  function_header . compound_st   (rule 8)
    function_def  ->  function_header . error   (rule 10)

    error	shift, and go to state 21
    TBRAML	shift, and go to state 16

    compound_st	go to state 22



state 10

    function_header  ->  dcl_spec . function_name formal_param   (rule 11)
    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 36)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 37)

    TIDENT	shift, and go to state 23

    function_name	go to state 24
    init_dcl_list	go to state 25
    init_declarator	go to state 26
    declarator	go to state 27



state 11

    dcl_spec  ->  dcl_specifiers .   (rule 12)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 14)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    $default	reduce using rule 12 (dcl_spec)

    dcl_specifier	go to state 28
    type_qualifier	go to state 13
    type_specifier	go to state 14



state 12

    dcl_specifiers  ->  dcl_specifier .   (rule 13)

    $default	reduce using rule 13 (dcl_specifiers)



state 13

    dcl_specifier  ->  type_qualifier .   (rule 15)

    $default	reduce using rule 15 (dcl_specifier)



state 14

    dcl_specifier  ->  type_specifier .   (rule 16)

    $default	reduce using rule 16 (dcl_specifier)



state 15

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 16

    compound_st  ->  TBRAML . opt_dcl_list opt_stat_list TBRAMR   (rule 30)
    compound_st  ->  TBRAML . opt_dcl_list opt_stat_list error   (rule 31)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    $default	reduce using rule 33 (opt_dcl_list)

    dcl_spec	go to state 29
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_dcl_list	go to state 30
    declaration_list	go to state 31
    declaration	go to state 32



state 17

    external_dcl  ->  error TBRAMR .   (rule 7)

    $default	reduce using rule 7 (external_dcl)



state 18

    external_dcl  ->  error TSEMICOLON .   (rule 6)

    $default	reduce using rule 6 (external_dcl)



state 19

    function_def  ->  error compound_st .   (rule 9)

    $default	reduce using rule 9 (function_def)



state 20

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 21

    function_def  ->  function_header error .   (rule 10)

    $default	reduce using rule 10 (function_def)



state 22

    function_def  ->  function_header compound_st .   (rule 8)

    $default	reduce using rule 8 (function_def)



state 23

    function_name  ->  TIDENT .   (rule 21)
    declarator  ->  TIDENT .   (rule 44)
    declarator  ->  TIDENT . TBRALL opt_number TBRALR   (rule 45)
    declarator  ->  TIDENT . TBRALL opt_number error   (rule 46)

    TBRALL	shift, and go to state 33

    TBRASL	reduce using rule 21 (function_name)
    $default	reduce using rule 44 (declarator)



state 24

    function_header  ->  dcl_spec function_name . formal_param   (rule 11)

    TBRASL	shift, and go to state 34

    formal_param	go to state 35



state 25

    declaration  ->  dcl_spec init_dcl_list . TSEMICOLON   (rule 36)
    declaration  ->  dcl_spec init_dcl_list . error   (rule 37)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 39)
    init_dcl_list  ->  init_dcl_list . init_declarator error   (rule 40)

    error	shift, and go to state 36
    TCOMMA	shift, and go to state 37
    TSEMICOLON	shift, and go to state 38
    TIDENT	shift, and go to state 39

    init_declarator	go to state 40
    declarator	go to state 27



state 26

    init_dcl_list  ->  init_declarator .   (rule 38)

    $default	reduce using rule 38 (init_dcl_list)



state 27

    init_declarator  ->  declarator .   (rule 41)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 42)
    init_declarator  ->  declarator . TASSIGN TRNUMBER   (rule 43)

    TASSIGN	shift, and go to state 41

    $default	reduce using rule 41 (init_declarator)



state 28

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 14)

    $default	reduce using rule 14 (dcl_specifiers)



state 29

    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 36)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 37)

    TIDENT	shift, and go to state 39

    init_dcl_list	go to state 25
    init_declarator	go to state 26
    declarator	go to state 27



state 30

    compound_st  ->  TBRAML opt_dcl_list . opt_stat_list TBRAMR   (rule 30)
    compound_st  ->  TBRAML opt_dcl_list . opt_stat_list error   (rule 31)

    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    TSEMICOLON	reduce using rule 62 (opt_expression)
    $default	reduce using rule 51 (opt_stat_list)

    compound_st	go to state 53
    opt_stat_list	go to state 54
    statement_list	go to state 55
    statement	go to state 56
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 31

    opt_dcl_list  ->  declaration_list .   (rule 32)
    declaration_list  ->  declaration_list . declaration   (rule 35)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    $default	reduce using rule 32 (opt_dcl_list)

    dcl_spec	go to state 29
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 73



state 32

    declaration_list  ->  declaration .   (rule 34)

    $default	reduce using rule 34 (declaration_list)



state 33

    declarator  ->  TIDENT TBRALL . opt_number TBRALR   (rule 45)
    declarator  ->  TIDENT TBRALL . opt_number error   (rule 46)

    TNUMBER	shift, and go to state 74
    TRNUMBER	shift, and go to state 75

    $default	reduce using rule 49 (opt_number)

    opt_number	go to state 76



state 34

    formal_param  ->  TBRASL . opt_formal_param TBRASR   (rule 22)
    formal_param  ->  TBRASL . opt_formal_param error   (rule 23)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    $default	reduce using rule 25 (opt_formal_param)

    dcl_spec	go to state 77
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_formal_param	go to state 78
    formal_param_list	go to state 79
    param_dcl	go to state 80



state 35

    function_header  ->  dcl_spec function_name formal_param .   (rule 11)

    $default	reduce using rule 11 (function_header)



state 36

    declaration  ->  dcl_spec init_dcl_list error .   (rule 37)

    $default	reduce using rule 37 (declaration)



state 37

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 39)

    TIDENT	shift, and go to state 39

    init_declarator	go to state 81
    declarator	go to state 27



state 38

    declaration  ->  dcl_spec init_dcl_list TSEMICOLON .   (rule 36)

    $default	reduce using rule 36 (declaration)



state 39

    declarator  ->  TIDENT .   (rule 44)
    declarator  ->  TIDENT . TBRALL opt_number TBRALR   (rule 45)
    declarator  ->  TIDENT . TBRALL opt_number error   (rule 46)

    TBRALL	shift, and go to state 33

    $default	reduce using rule 44 (declarator)



state 40

    init_dcl_list  ->  init_dcl_list init_declarator . error   (rule 40)

    error	shift, and go to state 82



state 41

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 42)
    init_declarator  ->  declarator TASSIGN . TRNUMBER   (rule 43)

    TNUMBER	shift, and go to state 83
    TRNUMBER	shift, and go to state 84



state 42

    if_st  ->  TIF . TBRASL expression TBRASR statement   (rule 63)
    if_st  ->  TIF . TBRASL expression TBRASR statement TELSE statement   (rule 64)

    TBRASL	shift, and go to state 85



state 43

    return_st  ->  TRETURN . opt_expression TSEMICOLON   (rule 66)
    return_st  ->  TRETURN . opt_expression error   (rule 67)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    $default	reduce using rule 62 (opt_expression)

    opt_expression	go to state 86
    expression	go to state 87
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 44

    while_st  ->  TWHILE . TBRASL expression TBRASR statement   (rule 65)

    TBRASL	shift, and go to state 88



state 45

    additive_exp  ->  TSUB . error   (rule 106)
    unary_exp  ->  TSUB . unary_exp   (rule 112)

    error	shift, and go to state 89
    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 91
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 46

    unary_exp  ->  TNOT . unary_exp   (rule 113)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 92
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 47

    unary_exp  ->  TINC . unary_exp   (rule 114)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 93
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 48

    unary_exp  ->  TDEC . unary_exp   (rule 115)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 94
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 49

    primary_exp  ->  TBRASL . expression TBRASR   (rule 131)
    primary_exp  ->  TBRASL . expression error   (rule 132)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    expression	go to state 95
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 50

    primary_exp  ->  TIDENT .   (rule 128)

    $default	reduce using rule 128 (primary_exp)



state 51

    primary_exp  ->  TNUMBER .   (rule 129)

    $default	reduce using rule 129 (primary_exp)



state 52

    primary_exp  ->  TRNUMBER .   (rule 130)

    $default	reduce using rule 130 (primary_exp)



state 53

    statement  ->  compound_st .   (rule 54)

    $default	reduce using rule 54 (statement)



state 54

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list . TBRAMR   (rule 30)
    compound_st  ->  TBRAML opt_dcl_list opt_stat_list . error   (rule 31)

    error	shift, and go to state 96
    TBRAMR	shift, and go to state 97



state 55

    opt_stat_list  ->  statement_list .   (rule 50)
    statement_list  ->  statement_list . statement   (rule 53)

    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    TSEMICOLON	reduce using rule 62 (opt_expression)
    $default	reduce using rule 50 (opt_stat_list)

    compound_st	go to state 53
    statement	go to state 98
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 56

    statement_list  ->  statement .   (rule 52)

    $default	reduce using rule 52 (statement_list)



state 57

    statement  ->  expression_st .   (rule 55)

    $default	reduce using rule 55 (statement)



state 58

    expression_st  ->  opt_expression . TSEMICOLON   (rule 59)

    TSEMICOLON	shift, and go to state 99



state 59

    statement  ->  if_st .   (rule 56)

    $default	reduce using rule 56 (statement)



state 60

    statement  ->  while_st .   (rule 57)

    $default	reduce using rule 57 (statement)



state 61

    statement  ->  return_st .   (rule 58)

    $default	reduce using rule 58 (statement)



state 62

    expression_st  ->  expression . error   (rule 60)
    opt_expression  ->  expression .   (rule 61)

    error	shift, and go to state 100

    TSEMICOLON	reduce using rule 61 (opt_expression)



state 63

    expression  ->  assignment_exp .   (rule 68)

    $default	reduce using rule 68 (expression)



state 64

    assignment_exp  ->  logical_or_exp .   (rule 69)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 83)
    logical_or_exp  ->  logical_or_exp . TOR error   (rule 84)

    TOR 	shift, and go to state 101

    $default	reduce using rule 69 (assignment_exp)



state 65

    logical_or_exp  ->  logical_and_exp .   (rule 82)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 86)
    logical_and_exp  ->  logical_and_exp . TAND error   (rule 87)

    TAND	shift, and go to state 102

    $default	reduce using rule 82 (logical_or_exp)



state 66

    logical_and_exp  ->  equality_exp .   (rule 85)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 89)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 90)
    equality_exp  ->  equality_exp . TEQUAL error   (rule 91)
    equality_exp  ->  equality_exp . TNOTEQU error   (rule 92)

    TEQUAL	shift, and go to state 103
    TNOTEQU	shift, and go to state 104

    $default	reduce using rule 85 (logical_and_exp)



state 67

    equality_exp  ->  relational_exp .   (rule 88)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 94)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 95)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 96)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 97)
    relational_exp  ->  relational_exp . TGREAT error   (rule 98)
    relational_exp  ->  relational_exp . TLESS error   (rule 99)
    relational_exp  ->  relational_exp . TGREATE error   (rule 100)
    relational_exp  ->  relational_exp . TLESSE error   (rule 101)

    TGREATE	shift, and go to state 105
    TLESSE	shift, and go to state 106
    TGREAT	shift, and go to state 107
    TLESS	shift, and go to state 108

    $default	reduce using rule 88 (equality_exp)



state 68

    relational_exp  ->  additive_exp .   (rule 93)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 103)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TADD   (rule 105)

    TADD	shift, and go to state 109
    TSUB	shift, and go to state 110

    $default	reduce using rule 93 (relational_exp)



state 69

    additive_exp  ->  multiplicative_exp .   (rule 102)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 108)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 109)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 110)

    TMUL	shift, and go to state 111
    TDIV	shift, and go to state 112
    TMOD	shift, and go to state 113

    $default	reduce using rule 102 (additive_exp)



state 70

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 70)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 71)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 72)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 73)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 74)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 75)
    assignment_exp  ->  unary_exp . TASSIGN error   (rule 76)
    assignment_exp  ->  unary_exp . TADDASSIGN error   (rule 77)
    assignment_exp  ->  unary_exp . TSUBASSIGN error   (rule 78)
    assignment_exp  ->  unary_exp . TMULASSIGN error   (rule 79)
    assignment_exp  ->  unary_exp . TDIVASSIGN error   (rule 80)
    assignment_exp  ->  unary_exp . TMODASSIGN error   (rule 81)
    multiplicative_exp  ->  unary_exp .   (rule 107)

    TASSIGN	shift, and go to state 114
    TADDASSIGN	shift, and go to state 115
    TSUBASSIGN	shift, and go to state 116
    TMULASSIGN	shift, and go to state 117
    TDIVASSIGN	shift, and go to state 118
    TMODASSIGN	shift, and go to state 119

    $default	reduce using rule 107 (multiplicative_exp)



state 71

    unary_exp  ->  postfix_exp .   (rule 111)
    postfix_exp  ->  postfix_exp . TBRALL expression TBRALR   (rule 117)
    postfix_exp  ->  postfix_exp . TBRALL expression error   (rule 118)
    postfix_exp  ->  postfix_exp . TBRASL opt_actual_param TBRASR   (rule 119)
    postfix_exp  ->  postfix_exp . TBRASL opt_actual_param error   (rule 120)
    postfix_exp  ->  postfix_exp . TINC   (rule 121)
    postfix_exp  ->  postfix_exp . TDEC   (rule 122)

    TINC	shift, and go to state 120
    TDEC	shift, and go to state 121
    TBRASL	shift, and go to state 122
    TBRALL	shift, and go to state 123

    $default	reduce using rule 111 (unary_exp)



state 72

    postfix_exp  ->  primary_exp .   (rule 116)

    $default	reduce using rule 116 (postfix_exp)



state 73

    declaration_list  ->  declaration_list declaration .   (rule 35)

    $default	reduce using rule 35 (declaration_list)



state 74

    opt_number  ->  TNUMBER .   (rule 47)

    $default	reduce using rule 47 (opt_number)



state 75

    opt_number  ->  TRNUMBER .   (rule 48)

    $default	reduce using rule 48 (opt_number)



state 76

    declarator  ->  TIDENT TBRALL opt_number . TBRALR   (rule 45)
    declarator  ->  TIDENT TBRALL opt_number . error   (rule 46)

    error	shift, and go to state 124
    TBRALR	shift, and go to state 125



state 77

    param_dcl  ->  dcl_spec . declarator   (rule 29)

    TIDENT	shift, and go to state 39

    declarator	go to state 126



state 78

    formal_param  ->  TBRASL opt_formal_param . TBRASR   (rule 22)
    formal_param  ->  TBRASL opt_formal_param . error   (rule 23)

    error	shift, and go to state 127
    TBRASR	shift, and go to state 128



state 79

    opt_formal_param  ->  formal_param_list .   (rule 24)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 27)
    formal_param_list  ->  formal_param_list . param_dcl error   (rule 28)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5
    TCOMMA	shift, and go to state 129

    $default	reduce using rule 24 (opt_formal_param)

    dcl_spec	go to state 77
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 130



state 80

    formal_param_list  ->  param_dcl .   (rule 26)

    $default	reduce using rule 26 (formal_param_list)



state 81

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 39)

    $default	reduce using rule 39 (init_dcl_list)



state 82

    init_dcl_list  ->  init_dcl_list init_declarator error .   (rule 40)

    $default	reduce using rule 40 (init_dcl_list)



state 83

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 42)

    $default	reduce using rule 42 (init_declarator)



state 84

    init_declarator  ->  declarator TASSIGN TRNUMBER .   (rule 43)

    $default	reduce using rule 43 (init_declarator)



state 85

    if_st  ->  TIF TBRASL . expression TBRASR statement   (rule 63)
    if_st  ->  TIF TBRASL . expression TBRASR statement TELSE statement   (rule 64)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    expression	go to state 131
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 86

    return_st  ->  TRETURN opt_expression . TSEMICOLON   (rule 66)
    return_st  ->  TRETURN opt_expression . error   (rule 67)

    error	shift, and go to state 132
    TSEMICOLON	shift, and go to state 133



state 87

    opt_expression  ->  expression .   (rule 61)

    $default	reduce using rule 61 (opt_expression)



state 88

    while_st  ->  TWHILE TBRASL . expression TBRASR statement   (rule 65)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    expression	go to state 134
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 89

    additive_exp  ->  TSUB error .   (rule 106)

    $default	reduce using rule 106 (additive_exp)



state 90

    unary_exp  ->  TSUB . unary_exp   (rule 112)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 91
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 91

    unary_exp  ->  TSUB unary_exp .   (rule 112)

    $default	reduce using rule 112 (unary_exp)



state 92

    unary_exp  ->  TNOT unary_exp .   (rule 113)

    $default	reduce using rule 113 (unary_exp)



state 93

    unary_exp  ->  TINC unary_exp .   (rule 114)

    $default	reduce using rule 114 (unary_exp)



state 94

    unary_exp  ->  TDEC unary_exp .   (rule 115)

    $default	reduce using rule 115 (unary_exp)



state 95

    primary_exp  ->  TBRASL expression . TBRASR   (rule 131)
    primary_exp  ->  TBRASL expression . error   (rule 132)

    error	shift, and go to state 135
    TBRASR	shift, and go to state 136



state 96

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list error .   (rule 31)

    $default	reduce using rule 31 (compound_st)



state 97

    compound_st  ->  TBRAML opt_dcl_list opt_stat_list TBRAMR .   (rule 30)

    $default	reduce using rule 30 (compound_st)



state 98

    statement_list  ->  statement_list statement .   (rule 53)

    $default	reduce using rule 53 (statement_list)



state 99

    expression_st  ->  opt_expression TSEMICOLON .   (rule 59)

    $default	reduce using rule 59 (expression_st)



state 100

    expression_st  ->  expression error .   (rule 60)

    $default	reduce using rule 60 (expression_st)



state 101

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 83)
    logical_or_exp  ->  logical_or_exp TOR . error   (rule 84)

    error	shift, and go to state 137
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    logical_and_exp	go to state 138
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 102

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 86)
    logical_and_exp  ->  logical_and_exp TAND . error   (rule 87)

    error	shift, and go to state 140
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    equality_exp	go to state 141
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 103

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 89)
    equality_exp  ->  equality_exp TEQUAL . error   (rule 91)

    error	shift, and go to state 142
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    relational_exp	go to state 143
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 104

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 90)
    equality_exp  ->  equality_exp TNOTEQU . error   (rule 92)

    error	shift, and go to state 144
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    relational_exp	go to state 145
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 105

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 96)
    relational_exp  ->  relational_exp TGREATE . error   (rule 100)

    error	shift, and go to state 146
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    additive_exp	go to state 147
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 106

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 97)
    relational_exp  ->  relational_exp TLESSE . error   (rule 101)

    error	shift, and go to state 148
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    additive_exp	go to state 149
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 107

    relational_exp  ->  relational_exp TGREAT . additive_exp   (rule 94)
    relational_exp  ->  relational_exp TGREAT . error   (rule 98)

    error	shift, and go to state 150
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    additive_exp	go to state 151
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 108

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 95)
    relational_exp  ->  relational_exp TLESS . error   (rule 99)

    error	shift, and go to state 152
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    additive_exp	go to state 153
    multiplicative_exp	go to state 69
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 109

    additive_exp  ->  additive_exp TADD . multiplicative_exp   (rule 103)
    additive_exp  ->  additive_exp TADD .   (rule 105)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    TSUB	[reduce using rule 105 (additive_exp)]
    $default	reduce using rule 105 (additive_exp)

    multiplicative_exp	go to state 154
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 110

    additive_exp  ->  additive_exp TSUB . multiplicative_exp   (rule 104)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    multiplicative_exp	go to state 155
    unary_exp	go to state 139
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 111

    multiplicative_exp  ->  multiplicative_exp TMUL . unary_exp   (rule 108)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 156
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 112

    multiplicative_exp  ->  multiplicative_exp TDIV . unary_exp   (rule 109)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 157
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 113

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 110)

    TSUB	shift, and go to state 90
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    unary_exp	go to state 158
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 114

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 70)
    assignment_exp  ->  unary_exp TASSIGN . error   (rule 76)

    error	shift, and go to state 159
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 160
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 115

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 71)
    assignment_exp  ->  unary_exp TADDASSIGN . error   (rule 77)

    error	shift, and go to state 161
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 162
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 116

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 72)
    assignment_exp  ->  unary_exp TSUBASSIGN . error   (rule 78)

    error	shift, and go to state 163
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 164
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 117

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 73)
    assignment_exp  ->  unary_exp TMULASSIGN . error   (rule 79)

    error	shift, and go to state 165
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 166
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 118

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 74)
    assignment_exp  ->  unary_exp TDIVASSIGN . error   (rule 80)

    error	shift, and go to state 167
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 168
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 119

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 75)
    assignment_exp  ->  unary_exp TMODASSIGN . error   (rule 81)

    error	shift, and go to state 169
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 170
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 120

    postfix_exp  ->  postfix_exp TINC .   (rule 121)

    $default	reduce using rule 121 (postfix_exp)



state 121

    postfix_exp  ->  postfix_exp TDEC .   (rule 122)

    $default	reduce using rule 122 (postfix_exp)



state 122

    postfix_exp  ->  postfix_exp TBRASL . opt_actual_param TBRASR   (rule 119)
    postfix_exp  ->  postfix_exp TBRASL . opt_actual_param error   (rule 120)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    $default	reduce using rule 125 (actual_param)

    assignment_exp	go to state 171
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    opt_actual_param	go to state 172
    actual_param	go to state 173
    actual_param_list	go to state 174
    primary_exp	go to state 72



state 123

    postfix_exp  ->  postfix_exp TBRALL . expression TBRALR   (rule 117)
    postfix_exp  ->  postfix_exp TBRALL . expression error   (rule 118)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    expression	go to state 175
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 124

    declarator  ->  TIDENT TBRALL opt_number error .   (rule 46)

    $default	reduce using rule 46 (declarator)



state 125

    declarator  ->  TIDENT TBRALL opt_number TBRALR .   (rule 45)

    $default	reduce using rule 45 (declarator)



state 126

    param_dcl  ->  dcl_spec declarator .   (rule 29)

    $default	reduce using rule 29 (param_dcl)



state 127

    formal_param  ->  TBRASL opt_formal_param error .   (rule 23)

    $default	reduce using rule 23 (formal_param)



state 128

    formal_param  ->  TBRASL opt_formal_param TBRASR .   (rule 22)

    $default	reduce using rule 22 (formal_param)



state 129

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 27)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TVOID	shift, and go to state 5

    dcl_spec	go to state 77
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 176



state 130

    formal_param_list  ->  formal_param_list param_dcl . error   (rule 28)

    error	shift, and go to state 177



state 131

    if_st  ->  TIF TBRASL expression . TBRASR statement   (rule 63)
    if_st  ->  TIF TBRASL expression . TBRASR statement TELSE statement   (rule 64)

    TBRASR	shift, and go to state 178



state 132

    return_st  ->  TRETURN opt_expression error .   (rule 67)

    $default	reduce using rule 67 (return_st)



state 133

    return_st  ->  TRETURN opt_expression TSEMICOLON .   (rule 66)

    $default	reduce using rule 66 (return_st)



state 134

    while_st  ->  TWHILE TBRASL expression . TBRASR statement   (rule 65)

    TBRASR	shift, and go to state 179



state 135

    primary_exp  ->  TBRASL expression error .   (rule 132)

    $default	reduce using rule 132 (primary_exp)



state 136

    primary_exp  ->  TBRASL expression TBRASR .   (rule 131)

    $default	reduce using rule 131 (primary_exp)



state 137

    logical_or_exp  ->  logical_or_exp TOR error .   (rule 84)

    $default	reduce using rule 84 (logical_or_exp)



state 138

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 83)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 86)
    logical_and_exp  ->  logical_and_exp . TAND error   (rule 87)

    TAND	shift, and go to state 102

    $default	reduce using rule 83 (logical_or_exp)



state 139

    multiplicative_exp  ->  unary_exp .   (rule 107)

    $default	reduce using rule 107 (multiplicative_exp)



state 140

    logical_and_exp  ->  logical_and_exp TAND error .   (rule 87)

    $default	reduce using rule 87 (logical_and_exp)



state 141

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 86)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 89)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 90)
    equality_exp  ->  equality_exp . TEQUAL error   (rule 91)
    equality_exp  ->  equality_exp . TNOTEQU error   (rule 92)

    TEQUAL	shift, and go to state 103
    TNOTEQU	shift, and go to state 104

    $default	reduce using rule 86 (logical_and_exp)



state 142

    equality_exp  ->  equality_exp TEQUAL error .   (rule 91)

    $default	reduce using rule 91 (equality_exp)



state 143

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 89)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 94)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 95)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 96)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 97)
    relational_exp  ->  relational_exp . TGREAT error   (rule 98)
    relational_exp  ->  relational_exp . TLESS error   (rule 99)
    relational_exp  ->  relational_exp . TGREATE error   (rule 100)
    relational_exp  ->  relational_exp . TLESSE error   (rule 101)

    TGREATE	shift, and go to state 105
    TLESSE	shift, and go to state 106
    TGREAT	shift, and go to state 107
    TLESS	shift, and go to state 108

    $default	reduce using rule 89 (equality_exp)



state 144

    equality_exp  ->  equality_exp TNOTEQU error .   (rule 92)

    $default	reduce using rule 92 (equality_exp)



state 145

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 90)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 94)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 95)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 96)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 97)
    relational_exp  ->  relational_exp . TGREAT error   (rule 98)
    relational_exp  ->  relational_exp . TLESS error   (rule 99)
    relational_exp  ->  relational_exp . TGREATE error   (rule 100)
    relational_exp  ->  relational_exp . TLESSE error   (rule 101)

    TGREATE	shift, and go to state 105
    TLESSE	shift, and go to state 106
    TGREAT	shift, and go to state 107
    TLESS	shift, and go to state 108

    $default	reduce using rule 90 (equality_exp)



state 146

    relational_exp  ->  relational_exp TGREATE error .   (rule 100)

    $default	reduce using rule 100 (relational_exp)



state 147

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 96)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 103)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TADD   (rule 105)

    TADD	shift, and go to state 109
    TSUB	shift, and go to state 110

    $default	reduce using rule 96 (relational_exp)



state 148

    relational_exp  ->  relational_exp TLESSE error .   (rule 101)

    $default	reduce using rule 101 (relational_exp)



state 149

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 97)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 103)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TADD   (rule 105)

    TADD	shift, and go to state 109
    TSUB	shift, and go to state 110

    $default	reduce using rule 97 (relational_exp)



state 150

    relational_exp  ->  relational_exp TGREAT error .   (rule 98)

    $default	reduce using rule 98 (relational_exp)



state 151

    relational_exp  ->  relational_exp TGREAT additive_exp .   (rule 94)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 103)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TADD   (rule 105)

    TADD	shift, and go to state 109
    TSUB	shift, and go to state 110

    $default	reduce using rule 94 (relational_exp)



state 152

    relational_exp  ->  relational_exp TLESS error .   (rule 99)

    $default	reduce using rule 99 (relational_exp)



state 153

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 95)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 103)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TADD   (rule 105)

    TADD	shift, and go to state 109
    TSUB	shift, and go to state 110

    $default	reduce using rule 95 (relational_exp)



state 154

    additive_exp  ->  additive_exp TADD multiplicative_exp .   (rule 103)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 108)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 109)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 110)

    TMUL	shift, and go to state 111
    TDIV	shift, and go to state 112
    TMOD	shift, and go to state 113

    $default	reduce using rule 103 (additive_exp)



state 155

    additive_exp  ->  additive_exp TSUB multiplicative_exp .   (rule 104)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 108)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 109)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 110)

    TMUL	shift, and go to state 111
    TDIV	shift, and go to state 112
    TMOD	shift, and go to state 113

    $default	reduce using rule 104 (additive_exp)



state 156

    multiplicative_exp  ->  multiplicative_exp TMUL unary_exp .   (rule 108)

    $default	reduce using rule 108 (multiplicative_exp)



state 157

    multiplicative_exp  ->  multiplicative_exp TDIV unary_exp .   (rule 109)

    $default	reduce using rule 109 (multiplicative_exp)



state 158

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 110)

    $default	reduce using rule 110 (multiplicative_exp)



state 159

    assignment_exp  ->  unary_exp TASSIGN error .   (rule 76)

    $default	reduce using rule 76 (assignment_exp)



state 160

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 70)

    $default	reduce using rule 70 (assignment_exp)



state 161

    assignment_exp  ->  unary_exp TADDASSIGN error .   (rule 77)

    $default	reduce using rule 77 (assignment_exp)



state 162

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 71)

    $default	reduce using rule 71 (assignment_exp)



state 163

    assignment_exp  ->  unary_exp TSUBASSIGN error .   (rule 78)

    $default	reduce using rule 78 (assignment_exp)



state 164

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 72)

    $default	reduce using rule 72 (assignment_exp)



state 165

    assignment_exp  ->  unary_exp TMULASSIGN error .   (rule 79)

    $default	reduce using rule 79 (assignment_exp)



state 166

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 73)

    $default	reduce using rule 73 (assignment_exp)



state 167

    assignment_exp  ->  unary_exp TDIVASSIGN error .   (rule 80)

    $default	reduce using rule 80 (assignment_exp)



state 168

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 74)

    $default	reduce using rule 74 (assignment_exp)



state 169

    assignment_exp  ->  unary_exp TMODASSIGN error .   (rule 81)

    $default	reduce using rule 81 (assignment_exp)



state 170

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 75)

    $default	reduce using rule 75 (assignment_exp)



state 171

    actual_param_list  ->  assignment_exp .   (rule 126)

    $default	reduce using rule 126 (actual_param_list)



state 172

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param . TBRASR   (rule 119)
    postfix_exp  ->  postfix_exp TBRASL opt_actual_param . error   (rule 120)

    error	shift, and go to state 180
    TBRASR	shift, and go to state 181



state 173

    opt_actual_param  ->  actual_param .   (rule 123)

    $default	reduce using rule 123 (opt_actual_param)



state 174

    actual_param  ->  actual_param_list .   (rule 124)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 127)

    TCOMMA	shift, and go to state 182

    $default	reduce using rule 124 (actual_param)



state 175

    postfix_exp  ->  postfix_exp TBRALL expression . TBRALR   (rule 117)
    postfix_exp  ->  postfix_exp TBRALL expression . error   (rule 118)

    error	shift, and go to state 183
    TBRALR	shift, and go to state 184



state 176

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 27)

    $default	reduce using rule 27 (formal_param_list)



state 177

    formal_param_list  ->  formal_param_list param_dcl error .   (rule 28)

    $default	reduce using rule 28 (formal_param_list)



state 178

    if_st  ->  TIF TBRASL expression TBRASR . statement   (rule 63)
    if_st  ->  TIF TBRASL expression TBRASR . statement TELSE statement   (rule 64)

    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    $default	reduce using rule 62 (opt_expression)

    compound_st	go to state 53
    statement	go to state 185
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 179

    while_st  ->  TWHILE TBRASL expression TBRASR . statement   (rule 65)

    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    $default	reduce using rule 62 (opt_expression)

    compound_st	go to state 53
    statement	go to state 186
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 180

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param error .   (rule 120)

    $default	reduce using rule 120 (postfix_exp)



state 181

    postfix_exp  ->  postfix_exp TBRASL opt_actual_param TBRASR .   (rule 119)

    $default	reduce using rule 119 (postfix_exp)



state 182

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 127)

    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    assignment_exp	go to state 187
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 183

    postfix_exp  ->  postfix_exp TBRALL expression error .   (rule 118)

    $default	reduce using rule 118 (postfix_exp)



state 184

    postfix_exp  ->  postfix_exp TBRALL expression TBRALR .   (rule 117)

    $default	reduce using rule 117 (postfix_exp)



state 185

    if_st  ->  TIF TBRASL expression TBRASR statement .   (rule 63)
    if_st  ->  TIF TBRASL expression TBRASR statement . TELSE statement   (rule 64)

    TELSE	shift, and go to state 188

    $default	reduce using rule 63 (if_st)



state 186

    while_st  ->  TWHILE TBRASL expression TBRASR statement .   (rule 65)

    $default	reduce using rule 65 (while_st)



state 187

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 127)

    $default	reduce using rule 127 (actual_param_list)



state 188

    if_st  ->  TIF TBRASL expression TBRASR statement TELSE . statement   (rule 64)

    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TSUB	shift, and go to state 45
    TNOT	shift, and go to state 46
    TINC	shift, and go to state 47
    TDEC	shift, and go to state 48
    TBRASL	shift, and go to state 49
    TBRAML	shift, and go to state 16
    TIDENT	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TRNUMBER	shift, and go to state 52

    $default	reduce using rule 62 (opt_expression)

    compound_st	go to state 53
    statement	go to state 189
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 189

    if_st  ->  TIF TBRASL expression TBRASR statement TELSE statement .   (rule 64)

    $default	reduce using rule 64 (if_st)



state 190

    $   	go to state 191



state 191

    $   	go to state 192



state 192

    $default	accept
